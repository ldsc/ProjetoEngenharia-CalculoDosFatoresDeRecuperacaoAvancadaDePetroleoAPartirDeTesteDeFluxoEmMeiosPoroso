{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Documenta\'E7\'E3o}
{\comment Gerado por doxygen.}
{\creatim \yr2019\mo7\dy19\hr6\min32\sec21}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sexta, 19 de Julho de 2019 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CFluido\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPermeabilidadeabs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CRecuperacao\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CRocha\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Gnuplot\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
runtime_error
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
GnuplotException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CFluido} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPermeabilidadeabs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CRecuperacao} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CRocha} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representa as propriedades da rocha arenitica, Berea })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Gnuplot} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GnuplotException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CFluido.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CFluido.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CGnuplot.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CGnuplot.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CPermeabilidadeabs.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CPermeabilidadeabs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRecuperacao.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRecuperacao.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRocha.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRocha.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b ProjetoBuenoLaisa.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CFluido\par \pard\plain 
{\tc\tcl2 \v CFluido}
{\xe \v CFluido}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\par
{
{\f2 #include <CFluido.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CFluido} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CFluido} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CFluido} (std::string _tF, double _visc, double _q)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gV} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sV} (double visc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gQ} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sQ} (double q)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b tipoFluido}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b viscosidade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b vazao}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CFluido\:CFluido}
{\xe \v CFluido\:CFluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CFluido::CFluido (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    16 \{\};\par
}
}
{\xe \v ~CFluido\:CFluido}
{\xe \v CFluido\:~CFluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CFluido::~CFluido (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    17 \{\};\par
}
}
{\xe \v CFluido\:CFluido}
{\xe \v CFluido\:CFluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CFluido::CFluido (std::string  {\i _tF}, double  {\i _visc}, double  {\i _q})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     3                                                        \{\par
    4     tipoFluido = _tF; \par
    5     viscosidade = _visc;\par
    6     vazao = _q;\par
    7 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v gQ\:CFluido}
{\xe \v CFluido\:gQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CFluido::gQ ()}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    10 \{ {\cf19 return} vazao; \}\par
}
}
{\xe \v gV\:CFluido}
{\xe \v CFluido\:gV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CFluido::gV ()}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8 \{ {\cf19 return} viscosidade; \}\par
}
}
{\xe \v sQ\:CFluido}
{\xe \v CFluido\:sQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CFluido::sQ (double  {\i q})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    11 \{ vazao = q; \}\par
}
}
{\xe \v sV\:CFluido}
{\xe \v CFluido\:sV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CFluido::sV (double  {\i visc})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9 \{ viscosidade = visc; \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v tipoFluido\:CFluido}
{\xe \v CFluido\:tipoFluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CFluido::tipoFluido{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vazao\:CFluido}
{\xe \v CFluido\:vazao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CFluido::vazao{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v viscosidade\:CFluido}
{\xe \v CFluido\:viscosidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CFluido::viscosidade{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CFluido.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CFluido.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CPermeabilidadeabs\par \pard\plain 
{\tc\tcl2 \v CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\par
{
{\f2 #include <CPermeabilidadeabs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPermeabilidadeabs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPermeabilidadeabs} (std::vector< double > _y, std::vector< double > _p, {\b CRocha} _amostra, {\b CFluido} _fl)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b gX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sX} (std::vector< double > _x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b gY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sY} (std::vector< double > _y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b gP} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sP} (std::vector< double > p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gK} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sK} (double k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b X} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Y} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegressaoLinear} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b pressao}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b permeabilidade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRocha} {\b amostra}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CFluido} {\b fluido}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~CPermeabilidadeabs\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:~CPermeabilidadeabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPermeabilidadeabs::~CPermeabilidadeabs (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    26 \{\};\par
}
}
{\xe \v CPermeabilidadeabs\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:CPermeabilidadeabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPermeabilidadeabs::CPermeabilidadeabs (std::vector< double >  {\i _y}, std::vector< double >  {\i _p}, {\b CRocha}  {\i _amostra}, {\b CFluido}  {\i _fl})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     3                                                                                                                \{\par
    4     y = _y;\par
    5     pressao = _p;\par
    6     amostra = _amostra;\par
    7     fluido = _fl;\par
    8     X();\par
    9     Y();\par
   10 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v gK\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:gK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPermeabilidadeabs::gK (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38 \{ {\cf19 return} permeabilidade; \}\par
}
}
{\xe \v gP\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:gP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::gP (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35 \{ {\cf19 return} pressao; \}\par
}
}
{\xe \v gX\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:gX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::gX (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    29 \{ {\cf19 return} x; \}\par
}
}
{\xe \v gY\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:gY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::gY (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{ {\cf19 return} y; \}\par
}
}
{\xe \v RegressaoLinear\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:RegressaoLinear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::RegressaoLinear ()}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    30                                          \{\par
   31     arma::Col<double> x1 = arma::Col<double>(x); {\cf20 //Convers\'E3o dos par\'E2metros x para Armadillo}\par
   32     arma::Col<double> y1 = arma::Col<double>(y); {\cf20 //Convers\'E3o dos par\'E2metros y para Armadillo}\par
   33     {\cf17 auto} d = arma::polyfit(x1, y1, 1); {\cf20 //f = ax+b; d \'E9 o polin\'F4mio de ajuste}\par
   34     permeabilidade = d.eval()(0); {\cf20 // retirando o coeficiente A do pol. de ajuste}\par
   35     std::cout << {\cf22 "Permeabilidade absoluta do plug: "} << permeabilidade << {\cf22 " mD\\n"};\par
   36     {\cf20 //float b = d.eval()(1); //retirando o coeficiente B do pol. de ajuste}\par
   37     {\cf20 //std::cout << permeabilidade << " " << d.eval()(1);}\par
   38 \par
   39     std::vector<double> x2; {\cf20 //criando }\par
   40     std::vector<double> y2; {\cf20 //criando}\par
   41     {\cf19 for} ({\cf18 int} i = 0; i < x.size(); i++) \{\par
   42         x2.push_back(x[i]);\par
   43         y2.push_back(y[i]);\par
   44     \}\par
   45     {\cf20 //Aparecer a equa\'E7\'E3o da reta no gr\'E1fico - PlotVector n\'E3o rodou.}\par
   46     std::string eqreta = {\cf22 "y = "} + std::to_string(permeabilidade) + {\cf22 "x +"} + std::to_string(d.eval()(1));\par
   47     CGnuplot plot;\par
   48     std::ofstream tmpfile({\cf22 "myfile4.txt"});\par
   49     {\cf19 for} ({\cf18 int} i = 0; i < x2.size(); i++) \{\par
   50         tmpfile << x2[i] << {\cf22 "   "} << y2[i] << {\cf23 '\\n'};\par
   51     \}\par
   52     tmpfile.close();\par
   53     plot << {\cf22 "set title \\"Permeabilidade Absoluta - BEREA6\\""};\par
   54     plot << {\cf22 "set xlabel \\"X\\""};\par
   55     plot << {\cf22 "set ylabel \\"Vaz\'E3o\\""};\par
   56     plot << {\cf22 "plot 'myfile4.txt' title \\""} + eqreta + {\cf22 "\\" with lines"};\par
   57     {\cf20 //plot << "set legend \\"Series1\\"";}\par
   58     std::cout << {\cf22 "Pressione uma tecla para continuar"}; std::cin.get(); std::cout << {\cf23 '\\n'};\par
   59     system({\cf22 "erase myfile4.txt"});\par
   60 \}\par
}
}
{\xe \v sK\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:sK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::sK (double  {\i k}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    39 \{ permeabilidade = k; \}\par
}
}
{\xe \v sP\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:sP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::sP (std::vector< double >  {\i p}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    36 \{ pressao = p; \}\par
}
}
{\xe \v sX\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:sX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::sX (std::vector< double >  {\i _x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    30 \{ x = _x; \}\par
}
}
{\xe \v sY\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:sY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::sY (std::vector< double >  {\i _y}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33 \{ y = _y; \}\par
}
}
{\xe \v X\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::X ()}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    11                            \{\par
   12     {\cf19 if} (y.size() != pressao.size()) \{ {\cf20 //verificando se o tamanho de y \'E9 igual da press\'E3o.}\par
   13         std::cout << {\cf22 "Vetores de pressao e vazao de tamanhos diferentes"} << {\cf23 '\\n'};\par
   14     \}\par
   15     {\cf19 else} \{\par
   16         x.resize(y.size()); {\cf20 //redimensionar}\par
   17         {\cf19 for} ({\cf18 int} i = 0; i < x.size(); ++i) \{ {\cf20 //.size() - tamanho do vetor (quantidade de valores preenchidos)}\par
   18             x[i] = (amostra.Area() * pressao[i]) / (fluido.gV() * amostra.gC()) * (0.06804596);\par
   19             std::cout << x[i] << {\cf22 " "}; {\cf20 //Valor calculado aparece na tela}\par
   20         \}\par
   21     \}\par
   22     std::cout << {\cf23 '\\n'};\par
   23 \}\par
}
}
{\xe \v Y\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPermeabilidadeabs::Y ()}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    24                            \{\par
   25     {\cf19 for} ({\cf18 int} j = 0; j < y.size(); j++) \{ \par
   26         y[j] = y[j] * 16.66667; {\cf20 // convers\'E3o de unidade}\par
   27         std::cout << y[j] << {\cf22 "\\n"};\par
   28     \}\par
   29 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v amostra\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:amostra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CRocha} CPermeabilidadeabs::amostra{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fluido\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:fluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CFluido} CPermeabilidadeabs::fluido{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v permeabilidade\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:permeabilidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPermeabilidadeabs::permeabilidade{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pressao\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:pressao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::pressao{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::x{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:CPermeabilidadeabs}
{\xe \v CPermeabilidadeabs\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPermeabilidadeabs::y{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CPermeabilidadeabs.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CPermeabilidadeabs.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CRecuperacao\par \pard\plain 
{\tc\tcl2 \v CRecuperacao}
{\xe \v CRecuperacao}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
{
{\f2 #include <CRecuperacao.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRecuperacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CRecuperacao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRecuperacao} ({\b CRocha} _rocha)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gVwi} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sVwi} (double Vwi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gVwf} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sVwf} (double Vwf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gVof} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sVof} (double Vof1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gVor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sVor} (double Vof2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b gTF} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sTF} (std::string tF)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeOleoInicial} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SaturacaoAguaInicial} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SaturacaoOleoInicial} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SaturacaoAguaIrredutivel} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeOleoResidual} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SaturacaoOleoResidual} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FatorRecuperacaoSecundadria} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FatorRecuperacaoAvancada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeTotalProduzido} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FatorRecuperacaoTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Read} (std::string arq)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leitura do arquivo de texto: "experimento.recuperacao.txt". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VwProduzida} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VoProduzido1} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VoProduzido2} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b t_volume_agua_produzida}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b t_volume_oleo_produzido_rsecundaria}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b t_volume_oleo_produzido_ravancada}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b volume_agua_produzida}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b volume_oleo_produzido_rsecundaria}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b volume_oleo_produzido_ravancada}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b tipoFluido}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeAguaInicial}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeAguaProduzida}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeOleoProduzido1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeOleoProduzido2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRocha} {\b rocha}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CRecuperacao\:CRecuperacao}
{\xe \v CRecuperacao\:CRecuperacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRecuperacao::CRecuperacao (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31 \{\};\par
}
}
{\xe \v ~CRecuperacao\:CRecuperacao}
{\xe \v CRecuperacao\:~CRecuperacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRecuperacao::~CRecuperacao (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\};\par
}
}
{\xe \v CRecuperacao\:CRecuperacao}
{\xe \v CRecuperacao\:CRecuperacao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRecuperacao::CRecuperacao ({\b CRocha}  {\i _rocha})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     3                                         \{\par
    4     rocha = _rocha;\par
    5 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v FatorRecuperacaoAvancada\:CRecuperacao}
{\xe \v CRecuperacao\:FatorRecuperacaoAvancada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::FatorRecuperacaoAvancada ()}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    43                                               \{\par
   44     {\cf19 return} (VolumeOleoProduzido2 / VolumeOleoInicial())*100.0;\par
   45 \}\par
}
}
{\xe \v FatorRecuperacaoSecundadria\:CRecuperacao}
{\xe \v CRecuperacao\:FatorRecuperacaoSecundadria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::FatorRecuperacaoSecundadria ()}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    40                                                  \{\par
   41     {\cf19 return} (VolumeOleoProduzido1 / VolumeOleoInicial())*100.0;\par
   42 \}\par
}
}
{\xe \v FatorRecuperacaoTotal\:CRecuperacao}
{\xe \v CRecuperacao\:FatorRecuperacaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::FatorRecuperacaoTotal ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    49                                            \{\par
   50     {\cf19 return} (VolumeTotalProduzido() / VolumeOleoInicial())*100.0;\par
   51 \}\par
}
}
{\xe \v gTF\:CRecuperacao}
{\xe \v CRecuperacao\:gTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CRecuperacao::gTF ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    19 \{ {\cf19 return} tipoFluido; \}\par
}
}
{\xe \v gVof\:CRecuperacao}
{\xe \v CRecuperacao\:gVof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::gVof ()}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    13 \{ {\cf19 return} VolumeOleoProduzido1; \}\par
}
}
{\xe \v gVor\:CRecuperacao}
{\xe \v CRecuperacao\:gVor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::gVor ()}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    16 \{ {\cf19 return} VolumeOleoProduzido2; \}\par
}
}
{\xe \v gVwf\:CRecuperacao}
{\xe \v CRecuperacao\:gVwf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::gVwf ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    10 \{ {\cf19 return} VolumeAguaProduzida; \}\par
}
}
{\xe \v gVwi\:CRecuperacao}
{\xe \v CRecuperacao\:gVwi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::gVwi ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     7 \{ {\cf19 return} VolumeAguaInicial; \}\par
}
}
{\xe \v Read\:CRecuperacao}
{\xe \v CRecuperacao\:Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::Read (std::string  {\i arq})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Leitura do arquivo de texto: "experimento.recuperacao.txt". }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    53                                      \{\par
   54     std::ifstream fin(arq);\par
   55     {\cf19 if} (!fin.good()) \{\par
   56         std::cerr << {\cf22 "Erro na leitura do arquivo"};\par
   57     \}\par
   58     {\cf18 double} d;\par
   59     fin.ignore(5000, {\cf23 '\\n'}); {\cf20 //Ignorando as primeiras linhas do arquivo .txt que contem cabecario}\par
   60     fin.ignore(5000, {\cf23 '\\n'});\par
   61     {\cf19 while} (!fin.eof()) \{\par
   62         fin >> d; {\cf20 //eu quero esse}\par
   63         t_volume_agua_produzida.push_back(d);\par
   64         fin >> d;\par
   65         fin >> d; \par
   66         fin >> d;\par
   67         volume_oleo_produzido_rsecundaria.push_back(d);\par
   68         fin >> d;\par
   69         fin >> d; \par
   70         t_volume_oleo_produzido_rsecundaria.push_back(d);\par
   71         fin >> d;\par
   72         fin >> d;\par
   73         volume_agua_produzida.push_back(d);\par
   74         fin >> d; \par
   75         fin >> d;\par
   76         fin >> d; \par
   77         t_volume_oleo_produzido_ravancada.push_back(d);\par
   78         fin >> d;\par
   79         fin >> d;\par
   80         fin >> d; \par
   81         volume_oleo_produzido_ravancada.push_back(d);\par
   82         fin >> d;\par
   83         fin.ignore(5000, {\cf23 '\\n'});\par
   84     \}\par
   85     t_volume_agua_produzida.pop_back();\par
   86     t_volume_oleo_produzido_rsecundaria.pop_back();\par
   87     t_volume_oleo_produzido_ravancada.pop_back();\par
   88     volume_agua_produzida.pop_back();\par
   89     volume_oleo_produzido_rsecundaria.pop_back();\par
   90     volume_oleo_produzido_ravancada.pop_back();\par
   91     {\cf20 //fiz isso para tirar o 20.3}\par
   92 \}\par
}
}
{\xe \v SaturacaoAguaInicial\:CRecuperacao}
{\xe \v CRecuperacao\:SaturacaoAguaInicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::SaturacaoAguaInicial ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25                                           \{\par
   26     {\cf19 return} (VolumeAguaInicial / rocha.VolumePoroso())*100.0;\par
   27 \}\par
}
}
{\xe \v SaturacaoAguaIrredutivel\:CRecuperacao}
{\xe \v CRecuperacao\:SaturacaoAguaIrredutivel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::SaturacaoAguaIrredutivel ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31                                               \{\par
   32     {\cf19 return} ((VolumeAguaInicial - VolumeAguaProduzida) / rocha.VolumePoroso())*100.0;\par
   33 \}\par
}
}
{\xe \v SaturacaoOleoInicial\:CRecuperacao}
{\xe \v CRecuperacao\:SaturacaoOleoInicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::SaturacaoOleoInicial ()}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    28                                           \{\par
   29     {\cf19 return} (VolumeOleoInicial() / rocha.VolumePoroso())*100.0;\par
   30 \}\par
}
}
{\xe \v SaturacaoOleoResidual\:CRecuperacao}
{\xe \v CRecuperacao\:SaturacaoOleoResidual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::SaturacaoOleoResidual ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37                                            \{\par
   38     {\cf19 return} (VolumeOleoResidual() / rocha.VolumePoroso())*100.0;\par
   39 \}\par
}
}
{\xe \v sTF\:CRecuperacao}
{\xe \v CRecuperacao\:sTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::sTF (std::string  {\i tF})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    20 \{ tipoFluido = tF; \}\par
}
}
{\xe \v sVof\:CRecuperacao}
{\xe \v CRecuperacao\:sVof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::sVof (double  {\i Vof1})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    14 \{ VolumeOleoProduzido1 = Vof1; \}\par
}
}
{\xe \v sVor\:CRecuperacao}
{\xe \v CRecuperacao\:sVor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::sVor (double  {\i Vof2})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    17 \{ VolumeOleoProduzido2 = Vof2; \}\par
}
}
{\xe \v sVwf\:CRecuperacao}
{\xe \v CRecuperacao\:sVwf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::sVwf (double  {\i Vwf})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    11 \{ VolumeAguaProduzida = Vwf; \}\par
}
}
{\xe \v sVwi\:CRecuperacao}
{\xe \v CRecuperacao\:sVwi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::sVwi (double  {\i Vwi})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8 \{ VolumeAguaInicial = Vwi; \}\par
}
}
{\xe \v VolumeOleoInicial\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeOleoInicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeOleoInicial ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    22                                        \{\par
   23     {\cf19 return} VolumeAguaProduzida;\par
   24 \}\par
}
}
{\xe \v VolumeOleoResidual\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeOleoResidual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeOleoResidual ()}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    34                                         \{\par
   35     {\cf19 return} VolumeOleoInicial() - VolumeOleoProduzido1;\par
   36 \}\par
}
}
{\xe \v VolumeTotalProduzido\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeTotalProduzido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeTotalProduzido ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    46                                           \{\par
   47     {\cf19 return} VolumeOleoProduzido1 + VolumeOleoProduzido2;\par
   48 \}\par
}
}
{\xe \v VoProduzido1\:CRecuperacao}
{\xe \v CRecuperacao\:VoProduzido1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::VoProduzido1 ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   107                                 \{\par
  108     CGnuplot plot;\par
  109     std::ofstream tmpfile({\cf22 "myfile2.txt"});\par
  110     {\cf19 for} ({\cf18 int} i = 0; i < t_volume_oleo_produzido_rsecundaria.size(); i++) \{\par
  111         tmpfile << t_volume_oleo_produzido_rsecundaria[i] << {\cf22 "  "} << volume_oleo_produzido_rsecundaria[i] << {\cf23 '\\n'};\par
  112     \}\par
  113     tmpfile.close();\par
  114     plot << {\cf22 "set title \\"Vol. \'D3leo Produzido por Recupera\'E7\'E3o Secund\'E1ria\\""};\par
  115     plot << {\cf22 "set xlabel \\"Tempo (min)\\""};\par
  116     plot << {\cf22 "set ylabel \\"Volume de \'D3leo (ml)\\""};\par
  117     plot << {\cf22 "plot 'myfile2.txt' with lines"};\par
  118     std::cout << {\cf22 "Pressione uma tecla para continuar"}; std::cin.get(); std::cout << {\cf23 '\\n'};\par
  119     system({\cf22 "erase myfile2.txt"});\par
  120 \}\par
}
}
{\xe \v VoProduzido2\:CRecuperacao}
{\xe \v CRecuperacao\:VoProduzido2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::VoProduzido2 ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   121                                 \{\par
  122     CGnuplot plot;\par
  123     std::ofstream tmpfile({\cf22 "myfile3.txt"});\par
  124     {\cf19 for} ({\cf18 int} i = 0; i < t_volume_oleo_produzido_ravancada.size(); i++) \{\par
  125         {\cf20 //std::cout << t_volume_oleo_produzido_ravancada[i] << "    " << volume_oleo_produzido_ravancada[i] << '\\n';}\par
  126         tmpfile << t_volume_oleo_produzido_ravancada[i] << {\cf22 "    "} << volume_oleo_produzido_ravancada[i] << {\cf23 '\\n'};\par
  127     \}\par
  128     tmpfile.close();\par
  129     plot << {\cf22 "set title \\"Vol. \'D3leo Produzido por Recupera\'E7\'E3o Avan\'E7ada\\""};\par
  130     plot << {\cf22 "set xlabel \\"Tempo (min)\\""};\par
  131     plot << {\cf22 "set ylabel \\"Volume de \'D3leo (ml)\\""};\par
  132     plot << {\cf22 "plot 'myfile3.txt' with lines"};\par
  133     std::cout << {\cf22 "Pressione uma tecla para continuar"}; std::cin.get(); std::cout << {\cf23 '\\n'};\par
  134     system({\cf22 "erase myfile3.txt"});\par
  135 \}\par
}
}
{\xe \v VwProduzida\:CRecuperacao}
{\xe \v CRecuperacao\:VwProduzida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRecuperacao::VwProduzida ()}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    93                                \{\par
   94     CGnuplot plot;\par
   95     std::ofstream tmpfile({\cf22 "myfile1.txt"});\par
   96     {\cf19 for} ({\cf18 int} i = 0; i < t_volume_agua_produzida.size(); i++) \{\par
   97             tmpfile << t_volume_agua_produzida[i] << {\cf22 "  "} << volume_agua_produzida[i] << {\cf23 '\\n'};\par
   98     \}\par
   99     tmpfile.close();\par
  100     plot << {\cf22 "set title \\"Vol. \'C1gua Produzida Acumulada - BEREA\\""};\par
  101     plot << {\cf22 "set xlabel \\"Tempo (min)\\""};\par
  102     plot << {\cf22 "set ylabel \\"Volume de \'C1gua (ml)\\""};\par
  103     plot << {\cf22 "plot 'myfile1.txt' with lines"};\par
  104     std::cout << {\cf22 "Pressione uma tecla para continuar"}; std::cin.get(); std::cout << {\cf23 '\\n'};\par
  105     system({\cf22 "erase myfile1.txt"});\par
  106 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v rocha\:CRecuperacao}
{\xe \v CRecuperacao\:rocha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CRocha} CRecuperacao::rocha{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t_volume_agua_produzida\:CRecuperacao}
{\xe \v CRecuperacao\:t_volume_agua_produzida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::t_volume_agua_produzida{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t_volume_oleo_produzido_ravancada\:CRecuperacao}
{\xe \v CRecuperacao\:t_volume_oleo_produzido_ravancada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::t_volume_oleo_produzido_ravancada{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t_volume_oleo_produzido_rsecundaria\:CRecuperacao}
{\xe \v CRecuperacao\:t_volume_oleo_produzido_rsecundaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::t_volume_oleo_produzido_rsecundaria{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tipoFluido\:CRecuperacao}
{\xe \v CRecuperacao\:tipoFluido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CRecuperacao::tipoFluido{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v volume_agua_produzida\:CRecuperacao}
{\xe \v CRecuperacao\:volume_agua_produzida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::volume_agua_produzida{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v volume_oleo_produzido_ravancada\:CRecuperacao}
{\xe \v CRecuperacao\:volume_oleo_produzido_ravancada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::volume_oleo_produzido_ravancada{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v volume_oleo_produzido_rsecundaria\:CRecuperacao}
{\xe \v CRecuperacao\:volume_oleo_produzido_rsecundaria}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CRecuperacao::volume_oleo_produzido_rsecundaria{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VolumeAguaInicial\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeAguaInicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeAguaInicial{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VolumeAguaProduzida\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeAguaProduzida}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeAguaProduzida{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VolumeOleoProduzido1\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeOleoProduzido1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeOleoProduzido1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VolumeOleoProduzido2\:CRecuperacao}
{\xe \v CRecuperacao\:VolumeOleoProduzido2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRecuperacao::VolumeOleoProduzido2{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRecuperacao.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRecuperacao.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CRocha\par \pard\plain 
{\tc\tcl2 \v CRocha}
{\xe \v CRocha}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representa as propriedades da rocha arenitica, Berea. }}\par
{
{\f2 #include <CRocha.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRocha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CRocha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CRocha} (std::string tR, double _d, double _c, double _ps, double _pm)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gD} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sD} (double d)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gC} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sC} (double c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gPS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sPS} (double ps)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b gPM} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sPM} (double pm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b gTR} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sTR} (std::string tr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Area} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumeTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b VolumePoroso} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Porosidade} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b tipoRocha}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b diametro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b comprimento}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pesoSeca}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pesoMolhada}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b porosidade}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representa as propriedades da rocha arenitica, Berea. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CRocha\:CRocha}
{\xe \v CRocha\:CRocha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRocha::CRocha (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    20 \{\};\par
}
}
{\xe \v ~CRocha\:CRocha}
{\xe \v CRocha\:~CRocha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRocha::~CRocha (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    21 \{\};\par
}
}
{\xe \v CRocha\:CRocha}
{\xe \v CRocha\:CRocha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CRocha::CRocha (std::string  {\i tR}, double  {\i _d}, double  {\i _c}, double  {\i _ps}, double  {\i _pm})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor Sobrecarregado. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                                                                          \{\par
    5     tipoRocha = tR;\par
    6     diametro = _d;\par
    7     comprimento = _c;\par
    8     pesoSeca = _ps;\par
    9     pesoMolhada = _pm;\par
   10     porosidade = Porosidade();\par
   11 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v Area\:CRocha}
{\xe \v CRocha\:Area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::Area ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    28                     \{\par
   29     {\cf19 return} PI * (pow(diametro, 2) / 4.0) * 0.1; {\cf20 //0.1 Representa fator para convers\'E3o de unidades}\par
   30 \}\par
}
}
{\xe \v gC\:CRocha}
{\xe \v CRocha\:gC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::gC ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    19 \{ {\cf19 return} comprimento; \}\par
}
}
{\xe \v gD\:CRocha}
{\xe \v CRocha\:gD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::gD ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    16 \{ {\cf19 return} diametro; \}\par
}
}
{\xe \v gPM\:CRocha}
{\xe \v CRocha\:gPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::gPM ()}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25 \{ {\cf19 return} pesoMolhada; \}\par
}
}
{\xe \v gPS\:CRocha}
{\xe \v CRocha\:gPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::gPS ()}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    22 \{ {\cf19 return} pesoSeca; \}\par
}
}
{\xe \v gTR\:CRocha}
{\xe \v CRocha\:gTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CRocha::gTR ()}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    13 \{ {\cf19 return} tipoRocha; \}\par
}
}
{\xe \v Porosidade\:CRocha}
{\xe \v CRocha\:Porosidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::Porosidade ()}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37                           \{\par
   38     {\cf19 return} VolumePoroso() / VolumeTotal();\par
   39 \}\par
}
}
{\xe \v sC\:CRocha}
{\xe \v CRocha\:sC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRocha::sC (double  {\i c})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    20 \{ comprimento = c; \}\par
}
}
{\xe \v sD\:CRocha}
{\xe \v CRocha\:sD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRocha::sD (double  {\i d})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    17 \{ diametro = d; \}\par
}
}
{\xe \v sPM\:CRocha}
{\xe \v CRocha\:sPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRocha::sPM (double  {\i pm})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    26 \{ pesoMolhada = pm; \}\par
}
}
{\xe \v sPS\:CRocha}
{\xe \v CRocha\:sPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRocha::sPS (double  {\i ps})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    23 \{ pesoSeca = ps; \}\par
}
}
{\xe \v sTR\:CRocha}
{\xe \v CRocha\:sTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CRocha::sTR (std::string  {\i tr})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    14 \{ tipoRocha = tr; \}\par
}
}
{\xe \v VolumePoroso\:CRocha}
{\xe \v CRocha\:VolumePoroso}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::VolumePoroso ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    34                             \{\par
   35     {\cf19 return} pesoMolhada - pesoSeca;\par
   36 \}\par
}
}
{\xe \v VolumeTotal\:CRocha}
{\xe \v CRocha\:VolumeTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::VolumeTotal ()}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    31                            \{\par
   32     {\cf19 return} Area()* comprimento* 0.1; {\cf20 //0.1 Representa fator para convers\'E3o de unidades}\par
   33 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v comprimento\:CRocha}
{\xe \v CRocha\:comprimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::comprimento{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v diametro\:CRocha}
{\xe \v CRocha\:diametro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::diametro{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pesoMolhada\:CRocha}
{\xe \v CRocha\:pesoMolhada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::pesoMolhada{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pesoSeca\:CRocha}
{\xe \v CRocha\:pesoSeca}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::pesoSeca{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v porosidade\:CRocha}
{\xe \v CRocha\:porosidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CRocha::porosidade{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tipoRocha\:CRocha}
{\xe \v CRocha\:tipoRocha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string CRocha::tipoRocha{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRocha.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CRocha.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Gnuplot\par \pard\plain 
{\tc\tcl2 \v Gnuplot}
{\xe \v Gnuplot}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. }}\par
{
{\f2 #include <CGnuplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::string &style="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, seta o estilo do grafico na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico a partir de um vector, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico do tipo x_y a partir de vetores, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y", const std::string &labelz="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico de x_y_z a partir de vetores, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Gnuplot} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor, necessario para deletar arquivos temporarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b cmd} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Cmd} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Command} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b operator<<} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga operador <<, funciona como Comando. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b showonscreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ShowOnScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b savetops} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, nome do arquivo sem extensao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b SaveTops} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, nome do arquivo sem extensao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_style} (const std::string &stylestr="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Style} (const std::string &stylestr="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_smooth} (const std::string &stylestr="csplines")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_smooth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Smooth} (const std::string &stylestr="csplines")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Smooth} (int _fsmooth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_pointsize} (const double pointsize=1.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PointSize} (const double pointsize=1.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_grid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_grid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Grid} (bool _fgrid=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_samples} (const int samples=100)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Samples} (const int samples=100)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_isosamples} (const int isolines=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b IsoSamples} (const int isolines=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_hidden3d} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_hidden3d} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Hidden3d} (bool _fhidden3d=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_contour} (const std::string &position="base")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_contour} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Contour} (const std::string &position="base")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Contour} (int _fcontour)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_surface} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_surface} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Surface} (int _fsurface=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_legend} (const std::string &position="default")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a legenda (a legenda \'E9 setada por padrao). Posicao: inside/outside, left/center/right, top/center/bottom, nobox/box. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_legend} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Legend} (const std::string &position="default")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Legend} (int _flegend)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_title} (const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_title} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Title} (const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Title} (int _ftitle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_ylabel} (const std::string &label="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLabel} (const std::string &label="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xlabel} (const std::string &label="x")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLabel} (const std::string &label="x")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zlabel} (const std::string &label="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLabel} (const std::string &label="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_yrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_yautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xlogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_xlogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLogscale} (bool _fxlogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_ylogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_ylogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLogscale} (bool _fylogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zlogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_zlogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo z (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLogscale} (bool _fzlogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_cbrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b CBRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_x} (const std::string &filename, const int column=1, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column=1, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_x} (const std::vector< double > &x, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xy} (const std::string &filename, const int column_x=1, const int column_y=2, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column_x=1, const int column_y=2, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xy} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xy_err} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_dy=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFileXYErrorBar} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_dy=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xy_err} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &dy, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVectorXYErrorBar} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &dy, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xyz} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_z=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_z=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xyz} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_slope} (const double a, const double b, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotSlope} (const double a, const double b, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_equation} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x Os operadores binarios aceitos sao: ** exponenciacao,. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotEquation} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x. Exemplo: gnuplot->PlotEquation(CFuncao& obj);. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_equation3d} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as variaveis independentes sao x e y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotEquation3d} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as vaiaveis independentes sao x e y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_image} (const unsigned char *ucPicBuf, const int iWidth, const int iHeight, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotImage} (const unsigned char *ucPicBuf, const int iWidth, const int iHeight, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b replot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Replot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b reset_plot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ResetPlot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b reset_all} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ResetAll} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_valid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsValid} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b set_GNUPlotPath} (const std::string &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Path} (const std::string &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b set_terminal_std} (const std::string &type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11, Mac - aqua. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Terminal} (const std::string &type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11 ou wxt (fedora9), Mac - aqua. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::string &  {\i style} = {\f2 "points"})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, seta o estilo do grafico na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{\par
  197     this->init();\par
  198     this->set_style(style);\par
  199 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico a partir de um vector, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   208 \{\par
  209     this->init();\par
  210 \par
  211     this->set_style(style);\par
  212     this->set_xlabel(labelx);\par
  213     this->set_ylabel(labely);\par
  214 \par
  215     this->plot_x(x,title);\par
  216 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico do tipo x_y a partir de vetores, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   226 \{\par
  227     this->init();\par
  228 \par
  229     this->set_style(style);\par
  230     this->set_xlabel(labelx);\par
  231     this->set_ylabel(labely);\par
  232 \par
  233     this->plot_xy(x,y,title);\par
  234 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"}, const std::string &  {\i labelz} = {\f2 "z"})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico de x_y_z a partir de vetores, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   246 \{\par
  247     this->init();\par
  248 \par
  249     this->set_style(style);\par
  250     this->set_xlabel(labelx);\par
  251     this->set_ylabel(labely);\par
  252     this->set_zlabel(labelz);\par
  253 \par
  254     this->plot_xyz(x,y,z,title);\par
  255 \}\par
}
}
{\xe \v ~Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:~Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::~Gnuplot ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor, necessario para deletar arquivos temporarios. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   260 \{\par
  261     {\cf19 if} ((this->tmpfile_list).size() > 0)\par
  262     \{\par
  263         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
  264             remove( this->tmpfile_list[i].c_str() );\par
  265 \par
  266         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
  267     \}\par
  268 \par
  269     {\cf20 // A stream opened by popen() should be closed by pclose()}\par
  270 {\cf21 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__)}\par
  271     {\cf19 if} (_pclose(this->gnucmd) == -1)\par
  272 {\cf21 #elif defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
  273     {\cf19 if} (pclose(this->gnucmd) == -1)\par
  274 {\cf21 #endif}\par
  275         {\cf19 throw} GnuplotException({\cf22 "Problem closing communication to gnuplot"});\par
  276 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v CBRange\:Gnuplot}
{\xe \v Gnuplot\:CBRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::CBRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   480                         \{ {\cf19 return} set_cbrange(iFrom, iTo); \}\par
}
}
{\xe \v cmd\:Gnuplot}
{\xe \v Gnuplot\:cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::cmd (const std::string &  {\i cmdstr})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1221 \{\par
 1222     {\cf19 if}( !(this->valid) )\par
 1223     \{\par
 1224         {\cf19 return} *{\cf17 this};\par
 1225     \}\par
 1226 \par
 1227     {\cf20 // int fputs ( const char * str, FILE * stream );}\par
 1228     {\cf20 // writes the string str to the stream.}\par
 1229     {\cf20 // The function begins copying from the address specified (str) until it reaches the}\par
 1230     {\cf20 // terminating null character ('\\0'). This final null-character is not copied to the stream.}\par
 1231     fputs( (cmdstr+{\cf22 "\\n"}).c_str(), this->gnucmd );\par
 1232 \par
 1233     {\cf20 // int fflush ( FILE * stream );}\par
 1234     {\cf20 // If the given stream was open for writing and the last i/o operation was an output operation,}\par
 1235     {\cf20 // any unwritten data in the output buffer is written to the file.}\par
 1236     {\cf20 // If the argument is a null pointer, all open files are flushed.}\par
 1237     {\cf20 // The stream remains open after this call.}\par
 1238     fflush(this->gnucmd);\par
 1239 \par
 1240 \par
 1241     {\cf19 if}( cmdstr.find({\cf22 "replot"}) != std::string::npos )\par
 1242     \{\par
 1243         {\cf19 return} *{\cf17 this};\par
 1244     \}\par
 1245     {\cf19 else} {\cf19 if}( cmdstr.find({\cf22 "splot"}) != std::string::npos )\par
 1246     \{\par
 1247         this->two_dim = {\cf17 false};\par
 1248         this->nplots++;\par
 1249     \}\par
 1250     {\cf19 else} {\cf19 if}( cmdstr.find({\cf22 "plot"}) != std::string::npos )\par
 1251     \{\par
 1252         this->two_dim = {\cf17 true};\par
 1253         this->nplots++;\par
 1254     \}\par
 1255     {\cf19 return} *{\cf17 this};\par
 1256 \}\par
}
}
{\xe \v Cmd\:Gnuplot}
{\xe \v Gnuplot\:Cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Cmd (const std::string &  {\i cmdstr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   183 \{ {\cf19 return} cmd(cmdstr); \}\par
}
}
{\xe \v Command\:Gnuplot}
{\xe \v Gnuplot\:Command}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Command (const std::string &  {\i cmdstr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   186 \{ {\cf19 return} cmd(cmdstr); \}\par
}
}
{\xe \v Contour\:Gnuplot}
{\xe \v Gnuplot\:Contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Contour (const std::string &  {\i position} = {\f2 "base"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa desenho do contorno em superficies (para plotagen 3d). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base,surface,both.} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   300                                                 \{ {\cf19 return} set_contour(position); \} \par
}
}
{\xe \v Contour\:Gnuplot}
{\xe \v Gnuplot\:Contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Contour (int  {\i _fcontour}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   303                         \{ {\cf19 if}( fcontour = _fcontour )\par
  304                               {\cf19 return} set_contour(); \par
  305                           {\cf19 else} \par
  306                               {\cf19 return} unset_contour();\par
  307                                                 \}  \par
}
}
{\xe \v Grid\:Gnuplot}
{\xe \v Gnuplot\:Grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Grid (bool  {\i _fgrid} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   259                         \{ {\cf19 if}(fgrid = _fgrid) \par
  260                             {\cf19 return} set_grid(); \par
  261                           {\cf19 else} \par
  262                             {\cf19 return} unset_grid(); \}\par
}
}
{\xe \v Hidden3d\:Gnuplot}
{\xe \v Gnuplot\:Hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Hidden3d (bool  {\i _fhidden3d} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   284                         \{ {\cf19 if}(fhidden3d = _fhidden3d) \par
  285                               {\cf19 return} set_hidden3d(); \par
  286                           {\cf19 else} \par
  287                               {\cf19 return} unset_hidden3d();\par
  288                         \}\par
}
}
{\xe \v is_valid\:Gnuplot}
{\xe \v Gnuplot\:is_valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::is_valid ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   322 \{\par
  323     {\cf19 return}(this->valid);\par
  324 \}\par
}
}
{\xe \v IsoSamples\:Gnuplot}
{\xe \v Gnuplot\:IsoSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::IsoSamples (const int  {\i isolines} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   274 \{ {\cf19 return} set_isosamples(isolines); \}\par
}
}
{\xe \v IsValid\:Gnuplot}
{\xe \v Gnuplot\:IsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::IsValid (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   661 \{ {\cf19 return} is_valid (); \};\par
}
}
{\xe \v Legend\:Gnuplot}
{\xe \v Gnuplot\:Legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Legend (const std::string &  {\i position} = {\f2 "default"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   330                                                 \{ {\cf19 return} set_legend(position); \}\par
}
}
{\xe \v Legend\:Gnuplot}
{\xe \v Gnuplot\:Legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Legend (int  {\i _flegend}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   334                         \{ {\cf19 if}(flegend = _flegend) \par
  335                               {\cf19 return} set_legend(); \par
  336                           {\cf19 else} \par
  337                               {\cf19 return} unset_legend();\par
  338                         \}\par
}
}
{\xe \v operator<<\:Gnuplot}
{\xe \v Gnuplot\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::operator<< (const std::string &  {\i cmdstr})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga operador <<, funciona como Comando. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1261 \{\par
 1262     this->cmd(cmdstr);\par
 1263     {\cf19 return} *{\cf17 this};\par
 1264 \}\par
}
}
{\xe \v Path\:Gnuplot}
{\xe \v Gnuplot\:Path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Gnuplot::Path (const std::string &  {\i path}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   136 \{ {\cf19 return} set_GNUPlotPath(path); \}\par
}
}
{\xe \v plot_equation\:Gnuplot}
{\xe \v Gnuplot\:plot_equation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_equation (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x Os operadores binarios aceitos sao: ** exponenciacao,. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
multiplicacao, / divisao,\par}
adicao,{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
subtracao, % modulo Os operadores unarios aceitos sao:\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
menos, ! fatorial Funcoes elementares: rand(x), abs(x), sgn(x), ceil(x), floor(x), int(x), imag(x), real(x), arg(x), sqrt(x), exp(x), log(x), log10(x), sin(x), cos(x), tan(x), asin(x), acos(x), atan(x), atan2(y,x), sinh(x), cosh(x), tanh(x), asinh(x), acosh(x), atanh(x) Funcoes especiais: erf(x), erfc(x), inverf(x), gamma(x), igamma(a,x), lgamma(x), ibeta(p,q,x), besj0(x), besj1(x), besy0(x), besy1(x), lambertw(x) Funcoes estatisticas: norm(x), invnorm(x) \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   805 \{\par
  806     std::ostringstream cmdstr;\par
  807 \par
  808     {\cf20 // command to be sent to gnuplot}\par
  809     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
  810         cmdstr << {\cf22 "replot "};\par
  811     {\cf19 else}\par
  812         cmdstr << {\cf22 "plot "};\par
  813 \par
  814     cmdstr << equation << {\cf22 " title \\""};\par
  815 \par
  816     {\cf19 if} (title == {\cf22 ""})\par
  817         cmdstr << {\cf22 "f(x) = "} << equation;\par
  818     {\cf19 else}\par
  819         cmdstr << title;\par
  820 \par
  821     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
  822 \par
  823     {\cf20 // Do the actual plot}\par
  824     this->cmd(cmdstr.str());\par
  825 \par
  826     {\cf19 return} *{\cf17 this};\par
  827 \}\par
}
}
{\xe \v plot_equation3d\:Gnuplot}
{\xe \v Gnuplot\:plot_equation3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_equation3d (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as variaveis independentes sao x e y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   833 \{\par
  834     std::ostringstream cmdstr;\par
  835 \par
  836     {\cf20 // command to be sent to gnuplot}\par
  837     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 false})\par
  838         cmdstr << {\cf22 "replot "};\par
  839     {\cf19 else}\par
  840         cmdstr << {\cf22 "splot "};\par
  841 \par
  842     cmdstr << equation << {\cf22 " title \\""};\par
  843 \par
  844     {\cf19 if} (title == {\cf22 ""})\par
  845         cmdstr << {\cf22 "f(x,y) = "} << equation;\par
  846     {\cf19 else}\par
  847         cmdstr << title;\par
  848 \par
  849     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
  850 \par
  851     {\cf20 // Do the actual plot}\par
  852     this->cmd(cmdstr.str());\par
  853 \par
  854     {\cf19 return} *{\cf17 this};\par
  855 \}\par
}
}
{\xe \v plot_image\:Gnuplot}
{\xe \v Gnuplot\:plot_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_image (const unsigned char *  {\i ucPicBuf}, const int  {\i iWidth}, const int  {\i iHeight}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
note that this function is not valid for versions of GNUPlot below 4.2 \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1179 \{\par
 1180     std::ofstream tmp;\par
 1181     std::string name = create_tmpfile(tmp);\par
 1182     {\cf19 if} (name == {\cf22 ""})\par
 1183         {\cf19 return} *{\cf17 this};\par
 1184 \par
 1185     {\cf20 // write the data to file}\par
 1186     {\cf18 int} iIndex = 0;\par
 1187     {\cf19 for}({\cf18 int} iRow = 0; iRow < iHeight; iRow++)\par
 1188     \{\par
 1189         {\cf19 for}({\cf18 int} iColumn = 0; iColumn < iWidth; iColumn++)\par
 1190         \{\par
 1191             tmp << iColumn << {\cf22 " "} << iRow  << {\cf22 " "} << static_cast<float>(ucPicBuf[iIndex++]) << std::endl;\par
 1192         \}\par
 1193     \}\par
 1194 \par
 1195     tmp.flush();\par
 1196     tmp.close();\par
 1197 \par
 1198 \par
 1199     std::ostringstream cmdstr;\par
 1200 \par
 1201     {\cf20 // command to be sent to gnuplot}\par
 1202     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
 1203         cmdstr << {\cf22 "replot "};\par
 1204     {\cf19 else}\par
 1205         cmdstr << {\cf22 "plot "};\par
 1206 \par
 1207     {\cf19 if} (title == {\cf22 ""})\par
 1208         cmdstr << {\cf22 "\\""} << name << {\cf22 "\\" with image"};\par
 1209     {\cf19 else}\par
 1210         cmdstr << {\cf22 "\\""} << name << {\cf22 "\\" title \\""} << title << {\cf22 "\\" with image"};\par
 1211 \par
 1212     {\cf20 // Do the actual plot}\par
 1213     this->cmd(cmdstr.str());\par
 1214 \par
 1215     {\cf19 return} *{\cf17 this};\par
 1216 \}\par
}
}
{\xe \v plot_slope\:Gnuplot}
{\xe \v Gnuplot\:plot_slope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_slope (const double  {\i a}, const double  {\i b}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   777 \{\par
  778     std::ostringstream cmdstr;\par
  779 \par
  780     {\cf20 // command to be sent to gnuplot}\par
  781     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
  782         cmdstr << {\cf22 "replot "};\par
  783     {\cf19 else}\par
  784         cmdstr << {\cf22 "plot "};\par
  785 \par
  786     cmdstr << a << {\cf22 " * x + "} << b << {\cf22 " title \\""};\par
  787 \par
  788     {\cf19 if} (title == {\cf22 ""})\par
  789         cmdstr << {\cf22 "f(x) = "} << a << {\cf22 " * x + "} << b;\par
  790     {\cf19 else}\par
  791         cmdstr << title;\par
  792 \par
  793     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
  794 \par
  795     {\cf20 // Do the actual plot}\par
  796     this->cmd(cmdstr.str());\par
  797 \par
  798     {\cf19 return} *{\cf17 this};\par
  799 \}\par
}
}
{\xe \v plot_x\:Gnuplot}
{\xe \v Gnuplot\:plot_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_x (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   905 \{\par
  906     {\cf19 if} (x.size() == 0)\par
  907     \{\par
  908         {\cf19 throw} GnuplotException({\cf22 "std::vector too small"});\par
  909         {\cf19 return} *{\cf17 this};\par
  910     \}\par
  911 \par
  912     std::ofstream tmp;\par
  913     std::string name = create_tmpfile(tmp);\par
  914     {\cf19 if} (name == {\cf22 ""})\par
  915         {\cf19 return} *{\cf17 this};\par
  916 \par
  917     {\cf20 // write the data to file}\par
  918     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
  919         tmp << x[i] << std::endl;\par
  920 \par
  921     tmp.flush();\par
  922     tmp.close();\par
  923 \par
  924     this->plotfile_x(name, 1, title);\par
  925 \par
  926     {\cf19 return} *{\cf17 this};\par
  927 \}\par
}
}
{\xe \v plot_xy\:Gnuplot}
{\xe \v Gnuplot\:plot_xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xy (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   978 \{\par
  979     {\cf19 if} (x.size() == 0 || y.size() == 0)\par
  980     \{\par
  981         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
  982         {\cf19 return} *{\cf17 this};\par
  983     \}\par
  984 \par
  985     {\cf19 if} (x.size() != y.size())\par
  986     \{\par
  987         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
  988         {\cf19 return} *{\cf17 this};\par
  989     \}\par
  990 \par
  991     std::ofstream tmp;\par
  992     std::string name = create_tmpfile(tmp);\par
  993     {\cf19 if} (name == {\cf22 ""})\par
  994         {\cf19 return} *{\cf17 this};\par
  995 \par
  996     {\cf20 // write the data to file}\par
  997     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
  998         tmp << x[i] << {\cf22 " "} << y[i] << std::endl;\par
  999 \par
 1000     tmp.flush();\par
 1001     tmp.close();\par
 1002 \par
 1003     this->plotfile_xy(name, 1, 2, title);\par
 1004 \par
 1005     {\cf19 return} *{\cf17 this};\par
 1006 \}\par
}
}
{\xe \v plot_xy_err\:Gnuplot}
{\xe \v Gnuplot\:plot_xy_err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xy_err (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i dy}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1058 \{\par
 1059     {\cf19 if} (x.size() == 0 || y.size() == 0 || dy.size() == 0)\par
 1060     \{\par
 1061         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
 1062         {\cf19 return} *{\cf17 this};\par
 1063     \}\par
 1064 \par
 1065     {\cf19 if} (x.size() != y.size() || y.size() != dy.size())\par
 1066     \{\par
 1067         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
 1068         {\cf19 return} *{\cf17 this};\par
 1069     \}\par
 1070 \par
 1071     std::ofstream tmp;\par
 1072     std::string name = create_tmpfile(tmp);\par
 1073     {\cf19 if} (name == {\cf22 ""})\par
 1074         {\cf19 return} *{\cf17 this};\par
 1075 \par
 1076     {\cf20 // write the data to file}\par
 1077     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
 1078         tmp << x[i] << {\cf22 " "} << y[i] << {\cf22 " "} << dy[i] << std::endl;\par
 1079 \par
 1080     tmp.flush();\par
 1081     tmp.close();\par
 1082 \par
 1083     {\cf20 // Do the actual plot}\par
 1084     this->plotfile_xy_err(name, 1, 2, 3, title);\par
 1085 \par
 1086     {\cf19 return} *{\cf17 this};\par
 1087 \}\par
}
}
{\xe \v plot_xyz\:Gnuplot}
{\xe \v Gnuplot\:plot_xyz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xyz (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1137 \{\par
 1138     {\cf19 if} (x.size() == 0 || y.size() == 0 || z.size() == 0)\par
 1139     \{\par
 1140         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
 1141         {\cf19 return} *{\cf17 this};\par
 1142     \}\par
 1143 \par
 1144     {\cf19 if} (x.size() != y.size() || x.size() != z.size())\par
 1145     \{\par
 1146         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
 1147         {\cf19 return} *{\cf17 this};\par
 1148     \}\par
 1149 \par
 1150 \par
 1151     std::ofstream tmp;\par
 1152     std::string name = create_tmpfile(tmp);\par
 1153     {\cf19 if} (name == {\cf22 ""})\par
 1154         {\cf19 return} *{\cf17 this};\par
 1155 \par
 1156     {\cf20 // write the data to file}\par
 1157     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
 1158     \{\par
 1159         tmp << x[i] << {\cf22 " "} << y[i] << {\cf22 " "} << z[i] <<std::endl;\par
 1160     \}\par
 1161 \par
 1162     tmp.flush();\par
 1163     tmp.close();\par
 1164 \par
 1165 \par
 1166     this->plotfile_xyz(name, 1, 2, 3, title);\par
 1167 \par
 1168     {\cf19 return} *{\cf17 this};\par
 1169 \}\par
}
}
{\xe \v PlotEquation\:Gnuplot}
{\xe \v Gnuplot\:PlotEquation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotEquation (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x. Exemplo: gnuplot->PlotEquation(CFuncao& obj);. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   610                           \{ {\cf19 return} plot_equation( equation, title ); \}\par
}
}
{\xe \v PlotEquation3d\:Gnuplot}
{\xe \v Gnuplot\:PlotEquation3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotEquation3d (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as vaiaveis independentes sao x e y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   621                           \{ {\cf19 return} plot_equation3d( equation, title ); \}\par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column} = {\f2 1}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   490                         \{ {\cf19 return} plotfile_x(filename, column, title);   \}\par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   507                         \{ \par
  508                         {\cf19 return} plotfile_xy(filename, column_x, column_y, title );\par
  509                         \} \par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_z} = {\f2 3}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   557                             \{ {\cf19 return} plotfile_xyz(filename, column_x,\par
  558                               column_y,column_z); \}\par
}
}
{\xe \v plotfile_x\:Gnuplot}
{\xe \v Gnuplot\:plotfile_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_x (const std::string &  {\i filename}, const int  {\i column} = {\f2 1}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   862 \{\par
  863     {\cf20 // check if file exists}\par
  864     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
  865     \{\par
  866         std::ostringstream except;\par
  867         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
  868             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
  869         {\cf19 else}\par
  870             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
  871         {\cf19 throw} GnuplotException( except.str() );\par
  872         {\cf19 return} *{\cf17 this};\par
  873     \}\par
  874 \par
  875     std::ostringstream cmdstr;\par
  876 \par
  877     {\cf20 // command to be sent to gnuplot}\par
  878     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
  879         cmdstr << {\cf22 "replot "};\par
  880     {\cf19 else}\par
  881         cmdstr << {\cf22 "plot "};\par
  882 \par
  883     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column;\par
  884 \par
  885     {\cf19 if} (title == {\cf22 ""})\par
  886         cmdstr << {\cf22 " notitle "};\par
  887     {\cf19 else}\par
  888         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
  889 \par
  890     {\cf19 if}(smooth == {\cf22 ""})\par
  891         cmdstr << {\cf22 "with "} << this->pstyle;\par
  892     {\cf19 else}\par
  893         cmdstr << {\cf22 "smooth "} << this->smooth;\par
  894 \par
  895     {\cf20 // Do the actual plot}\par
  896     this->cmd(cmdstr.str()); {\cf20 //nplots++; two_dim = true;  already in this->cmd();}\par
  897 \par
  898     {\cf19 return} *{\cf17 this};\par
  899 \}\par
}
}
{\xe \v plotfile_xy\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xy (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   935 \{\par
  936     {\cf20 // check if file exists}\par
  937     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
  938     \{\par
  939         std::ostringstream except;\par
  940         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
  941             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
  942         {\cf19 else}\par
  943             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
  944         {\cf19 throw} GnuplotException( except.str() );\par
  945         {\cf19 return} *{\cf17 this};\par
  946     \}\par
  947 \par
  948     std::ostringstream cmdstr;\par
  949     {\cf20 // command to be sent to gnuplot}\par
  950     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
  951         cmdstr << {\cf22 "replot "};\par
  952     {\cf19 else}\par
  953         cmdstr << {\cf22 "plot "};\par
  954 \par
  955     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y;\par
  956 \par
  957     {\cf19 if} (title == {\cf22 ""})\par
  958         cmdstr << {\cf22 " notitle "};\par
  959     {\cf19 else}\par
  960         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
  961 \par
  962     {\cf19 if}(smooth == {\cf22 ""})\par
  963         cmdstr << {\cf22 "with "} << this->pstyle;\par
  964     {\cf19 else}\par
  965         cmdstr << {\cf22 "smooth "} << this->smooth;\par
  966 \par
  967     {\cf20 // Do the actual plot}\par
  968     this->cmd(cmdstr.str());\par
  969 \par
  970     {\cf19 return} *{\cf17 this};\par
  971 \}\par
}
}
{\xe \v plotfile_xy_err\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xy_err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xy_err (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_dy} = {\f2 3}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1015 \{\par
 1016     {\cf20 // check if file exists}\par
 1017     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
 1018     \{\par
 1019         std::ostringstream except;\par
 1020         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
 1021             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
 1022         {\cf19 else}\par
 1023             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
 1024         {\cf19 throw} GnuplotException( except.str() );\par
 1025         {\cf19 return} *{\cf17 this};\par
 1026     \}\par
 1027 \par
 1028     std::ostringstream cmdstr;\par
 1029 \par
 1030     {\cf20 // command to be sent to gnuplot}\par
 1031     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
 1032         cmdstr << {\cf22 "replot "};\par
 1033     {\cf19 else}\par
 1034         cmdstr << {\cf22 "plot "};\par
 1035 \par
 1036     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y;\par
 1037 \par
 1038     {\cf19 if} (title == {\cf22 ""})\par
 1039         cmdstr << {\cf22 " notitle "};\par
 1040     {\cf19 else}\par
 1041         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
 1042 \par
 1043     cmdstr << {\cf22 "with "} << this->pstyle << {\cf22 ", \\""} << filename << {\cf22 "\\" using "}\par
 1044            << column_x << {\cf22 ":"} << column_y << {\cf22 ":"} << column_dy << {\cf22 " notitle with errorbars"};\par
 1045 \par
 1046     {\cf20 // Do the actual plot}\par
 1047     this->cmd(cmdstr.str());\par
 1048 \par
 1049     {\cf19 return} *{\cf17 this};\par
 1050 \}\par
}
}
{\xe \v plotfile_xyz\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xyz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xyz (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_z} = {\f2 3}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1096 \{\par
 1097 \par
 1098     {\cf20 // check if file exists}\par
 1099     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
 1100     \{\par
 1101         std::ostringstream except;\par
 1102         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
 1103             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
 1104         {\cf19 else}\par
 1105             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
 1106         {\cf19 throw} GnuplotException( except.str() );\par
 1107         {\cf19 return} *{\cf17 this};\par
 1108     \}\par
 1109 \par
 1110     std::ostringstream cmdstr;\par
 1111 \par
 1112     {\cf20 // command to be sent to gnuplot}\par
 1113     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 false})\par
 1114         cmdstr << {\cf22 "replot "};\par
 1115     {\cf19 else}\par
 1116         cmdstr << {\cf22 "splot "};\par
 1117 \par
 1118     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y << {\cf22 ":"} << column_z;\par
 1119 \par
 1120     {\cf19 if} (title == {\cf22 ""})\par
 1121         cmdstr << {\cf22 " notitle with "} << this->pstyle;\par
 1122     {\cf19 else}\par
 1123         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" with "} << this->pstyle;\par
 1124 \par
 1125     {\cf20 // Do the actual plot}\par
 1126     this->cmd(cmdstr.str());\par
 1127 \par
 1128     {\cf19 return} *{\cf17 this};\par
 1129 \}\par
}
}
{\xe \v PlotFileXYErrorBar\:Gnuplot}
{\xe \v Gnuplot\:PlotFileXYErrorBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotFileXYErrorBar (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_dy} = {\f2 3}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   531                           \{ {\cf19 return} plotfile_xy_err(filename,\par
  532                             column_x, column_y, column_dy, title ); \} \par
}
}
{\xe \v PlotImage\:Gnuplot}
{\xe \v Gnuplot\:PlotImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotImage (const unsigned char *  {\i ucPicBuf}, const int  {\i iWidth}, const int  {\i iHeight}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   630                                               \{ {\cf19 return} plot_image (ucPicBuf, iWidth, iHeight, title); \}\par
}
}
{\xe \v PlotSlope\:Gnuplot}
{\xe \v Gnuplot\:PlotSlope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotSlope (const double  {\i a}, const double  {\i b}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   576                             \{ {\cf19 return} plot_slope(a,b,title); \}\par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   497                         \{ {\cf19 return} plot_x( x, title ); \} \par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   518                         \{ {\cf19 return} plot_xy ( x, y,title ); \}\par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   569                             \{ {\cf19 return} plot_xyz(x, y, z, title); \}\par
}
}
{\xe \v PlotVectorXYErrorBar\:Gnuplot}
{\xe \v Gnuplot\:PlotVectorXYErrorBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PlotVectorXYErrorBar (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i dy}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   545                             \{ {\cf19 return} plot_xy_err(x, y, dy, title); \}\par
}
}
{\xe \v PointSize\:Gnuplot}
{\xe \v Gnuplot\:PointSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::PointSize (const double  {\i pointsize} = {\f2 1.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   249                         \{ {\cf19 return} set_pointsize(pointsize); \}\par
}
}
{\xe \v replot\:Gnuplot}
{\xe \v Gnuplot\:replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::replot ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   329 \{\par
  330     {\cf19 if} (this->nplots > 0)\par
  331     \{\par
  332         this->cmd({\cf22 "replot"});\par
  333     \}\par
  334 \par
  335     {\cf19 return} *{\cf17 this};\par
  336 \}\par
}
}
{\xe \v Replot\:Gnuplot}
{\xe \v Gnuplot\:Replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Replot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   641 \{ {\cf19 return} replot(); \}\par
}
}
{\xe \v Reset\:Gnuplot}
{\xe \v Gnuplot\:Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Reset (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   649 \{ {\cf19 return} reset_plot(); \}\par
}
}
{\xe \v reset_all\:Gnuplot}
{\xe \v Gnuplot\:reset_all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::reset_all ()}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   299 \{\par
  300     {\cf19 if} (this->tmpfile_list.size() > 0)\par
  301     \{\par
  302         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
  303             remove(this->tmpfile_list[i].c_str());\par
  304 \par
  305         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
  306         this->tmpfile_list.clear();\par
  307     \}\par
  308 \par
  309     this->nplots = 0;\par
  310     this->cmd({\cf22 "reset"});\par
  311     this->cmd({\cf22 "clear"});\par
  312     this->pstyle = {\cf22 "points"};\par
  313     this->smooth = {\cf22 ""};\par
  314     this->showonscreen();\par
  315 \par
  316     {\cf19 return} *{\cf17 this};\par
  317 \}\par
}
}
{\xe \v reset_plot\:Gnuplot}
{\xe \v Gnuplot\:reset_plot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::reset_plot ()}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   281 \{\par
  282     {\cf19 if} (this->tmpfile_list.size() > 0)\par
  283     \{\par
  284         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
  285             remove(this->tmpfile_list[i].c_str());\par
  286 \par
  287         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
  288         this->tmpfile_list.clear();\par
  289     \}\par
  290 \par
  291     this->nplots = 0;\par
  292 \par
  293     {\cf19 return} *{\cf17 this};\par
  294 \}\par
}
}
{\xe \v ResetAll\:Gnuplot}
{\xe \v Gnuplot\:ResetAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ResetAll (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   655 \{ {\cf19 return} reset_all(); \}\par
}
}
{\xe \v ResetPlot\:Gnuplot}
{\xe \v Gnuplot\:ResetPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ResetPlot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   647 \{ {\cf19 return} reset_plot(); \}\par
}
}
{\xe \v Samples\:Gnuplot}
{\xe \v Gnuplot\:Samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Samples (const int  {\i samples} = {\f2 100}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   268 \{ {\cf19 return} set_samples(samples); \}\par
}
}
{\xe \v savetops\:Gnuplot}
{\xe \v Gnuplot\:savetops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::savetops (const std::string &  {\i filename} = {\f2 "gnuplot_output"})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, nome do arquivo sem extensao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   425 \{\par
  426     this->cmd({\cf22 "set terminal postscript color"});\par
  427 \par
  428     std::ostringstream cmdstr;\par
  429     cmdstr << {\cf22 "set output \\""} << filename << {\cf22 ".ps\\""};\par
  430     this->cmd(cmdstr.str());\par
  431 \par
  432     {\cf19 return} *{\cf17 this};\par
  433 \}\par
}
}
{\xe \v SaveTops\:Gnuplot}
{\xe \v Gnuplot\:SaveTops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::SaveTops (const std::string &  {\i filename} = {\f2 "gnuplot_output"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, nome do arquivo sem extensao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   203                                       \{ {\cf19 return} savetops(filename); \}\par
}
}
{\xe \v set_cbrange\:Gnuplot}
{\xe \v Gnuplot\:set_cbrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_cbrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   762 \{\par
  763     std::ostringstream cmdstr;\par
  764 \par
  765     cmdstr << {\cf22 "set cbrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
  766     this->cmd(cmdstr.str());\par
  767 \par
  768     {\cf19 return} *{\cf17 this};\par
  769 \}\par
}
}
{\xe \v set_contour\:Gnuplot}
{\xe \v Gnuplot\:set_contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_contour (const std::string &  {\i position} = {\f2 "base"})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa desenho do contorno em superficies (para plotagen 3d). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base,surface,both.} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   589 \{\par
  590     {\cf19 if} (position.find({\cf22 "base"})    == std::string::npos  &&\par
  591         position.find({\cf22 "surface"}) == std::string::npos  &&\par
  592         position.find({\cf22 "both"})    == std::string::npos  )\par
  593     \{\par
  594         this->cmd({\cf22 "set contour base"});\par
  595     \}\par
  596     {\cf19 else}\par
  597     \{\par
  598         this->cmd({\cf22 "set contour "} + position);\par
  599     \}\par
  600 \par
  601     {\cf19 return} *{\cf17 this};\par
  602 \}\par
}
}
{\xe \v set_GNUPlotPath\:Gnuplot}
{\xe \v Gnuplot\:set_GNUPlotPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::set_GNUPlotPath (const std::string &  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   117 \{\par
  118     std::string tmp = path + {\cf22 "//"} + Gnuplot::m_sGNUPlotFileName;\par
  119 {\cf21 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__)}\par
  120     {\cf19 if} ( Gnuplot::file_exists(tmp,0) ) {\cf20 // check existence}\par
  121 {\cf21 #elif defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
  122     {\cf19 if} ( Gnuplot::file_exists(tmp,1) ) {\cf20 // check existence and execution permission}\par
  123 {\cf21 #endif}\par
  124     \{\par
  125         Gnuplot::m_sGNUPlotPath = path;\par
  126         {\cf19 return} {\cf17 true};\par
  127     \}\par
  128     {\cf19 else}\par
  129     \{\par
  130         Gnuplot::m_sGNUPlotPath.clear();\par
  131         {\cf19 return} {\cf17 false};\par
  132     \}\par
  133 \}\par
}
}
{\xe \v set_grid\:Gnuplot}
{\xe \v Gnuplot\:set_grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_grid ()}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   459 \{\par
  460     this->cmd({\cf22 "set grid"});\par
  461 \par
  462     {\cf19 return} *{\cf17 this};\par
  463 \}\par
}
}
{\xe \v set_hidden3d\:Gnuplot}
{\xe \v Gnuplot\:set_hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_hidden3d ()}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   571 \{\par
  572     this->cmd({\cf22 "set hidden3d"});\par
  573 \par
  574     {\cf19 return} *{\cf17 this};\par
  575 \}\par
}
}
{\xe \v set_isosamples\:Gnuplot}
{\xe \v Gnuplot\:set_isosamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_isosamples (const int  {\i isolines} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   560 \{\par
  561     std::ostringstream cmdstr;\par
  562     cmdstr << {\cf22 "set isosamples "} << isolines;\par
  563     this->cmd(cmdstr.str());\par
  564 \par
  565     {\cf19 return} *{\cf17 this};\par
  566 \}\par
}
}
{\xe \v set_legend\:Gnuplot}
{\xe \v Gnuplot\:set_legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_legend (const std::string &  {\i position} = {\f2 "default"})}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a legenda (a legenda \'E9 setada por padrao). Posicao: inside/outside, left/center/right, top/center/bottom, nobox/box. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   438 \{\par
  439     std::ostringstream cmdstr;\par
  440     cmdstr << {\cf22 "set key "} << position;\par
  441 \par
  442     this->cmd(cmdstr.str());\par
  443 \par
  444     {\cf19 return} *{\cf17 this};\par
  445 \}\par
}
}
{\xe \v set_pointsize\:Gnuplot}
{\xe \v Gnuplot\:set_pointsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_pointsize (const double  {\i pointsize} = {\f2 1.0})}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   538 \{\par
  539     std::ostringstream cmdstr;\par
  540     cmdstr << {\cf22 "set pointsize "} << pointsize;\par
  541     this->cmd(cmdstr.str());\par
  542 \par
  543     {\cf19 return} *{\cf17 this};\par
  544 \}\par
}
}
{\xe \v set_samples\:Gnuplot}
{\xe \v Gnuplot\:set_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_samples (const int  {\i samples} = {\f2 100})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   549 \{\par
  550     std::ostringstream cmdstr;\par
  551     cmdstr << {\cf22 "set samples "} << samples;\par
  552     this->cmd(cmdstr.str());\par
  553 \par
  554     {\cf19 return} *{\cf17 this};\par
  555 \}\par
}
}
{\xe \v set_smooth\:Gnuplot}
{\xe \v Gnuplot\:set_smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_smooth (const std::string &  {\i stylestr} = {\f2 "csplines"})}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   385 \{\par
  386     {\cf19 if} (stylestr.find({\cf22 "unique"})    == std::string::npos  &&\par
  387         stylestr.find({\cf22 "frequency"}) == std::string::npos  &&\par
  388         stylestr.find({\cf22 "csplines"})  == std::string::npos  &&\par
  389         stylestr.find({\cf22 "acsplines"}) == std::string::npos  &&\par
  390         stylestr.find({\cf22 "bezier"})    == std::string::npos  &&\par
  391         stylestr.find({\cf22 "sbezier"})   == std::string::npos  )\par
  392     \{\par
  393         this->smooth = {\cf22 ""};\par
  394     \}\par
  395     {\cf19 else}\par
  396     \{\par
  397         this->smooth = stylestr;\par
  398     \}\par
  399 \par
  400     {\cf19 return} *{\cf17 this};\par
  401 \}\par
}
}
{\xe \v set_style\:Gnuplot}
{\xe \v Gnuplot\:set_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_style (const std::string &  {\i stylestr} = {\f2 "points"})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   342 \{\par
  343     {\cf19 if} (stylestr.find({\cf22 "lines"})          == std::string::npos  &&\par
  344         stylestr.find({\cf22 "points"})         == std::string::npos  &&\par
  345         stylestr.find({\cf22 "linespoints"})    == std::string::npos  &&\par
  346         stylestr.find({\cf22 "impulses"})       == std::string::npos  &&\par
  347         stylestr.find({\cf22 "dots"})           == std::string::npos  &&\par
  348         stylestr.find({\cf22 "steps"})          == std::string::npos  &&\par
  349         stylestr.find({\cf22 "fsteps"})         == std::string::npos  &&\par
  350         stylestr.find({\cf22 "histeps"})        == std::string::npos  &&\par
  351         stylestr.find({\cf22 "boxes"})          == std::string::npos  &&  {\cf20 // 1-4 columns of data are required}\par
  352         stylestr.find({\cf22 "filledcurves"})   == std::string::npos  &&\par
  353         stylestr.find({\cf22 "histograms"})     == std::string::npos  )   {\cf20 //only for one data column}\par
  354 {\cf20 //        stylestr.find("labels")         == std::string::npos  &&  // 3 columns of data are required}\par
  355 {\cf20 //        stylestr.find("xerrorbars")     == std::string::npos  &&  // 3-4 columns of data are required}\par
  356 {\cf20 //        stylestr.find("xerrorlines")    == std::string::npos  &&  // 3-4 columns of data are required}\par
  357 {\cf20 //        stylestr.find("errorbars")      == std::string::npos  &&  // 3-4 columns of data are required}\par
  358 {\cf20 //        stylestr.find("errorlines")     == std::string::npos  &&  // 3-4 columns of data are required}\par
  359 {\cf20 //        stylestr.find("yerrorbars")     == std::string::npos  &&  // 3-4 columns of data are required}\par
  360 {\cf20 //        stylestr.find("yerrorlines")    == std::string::npos  &&  // 3-4 columns of data are required}\par
  361 {\cf20 //        stylestr.find("boxerrorbars")   == std::string::npos  &&  // 3-5 columns of data are required}\par
  362 {\cf20 //        stylestr.find("xyerrorbars")    == std::string::npos  &&  // 4,6,7 columns of data are required}\par
  363 {\cf20 //        stylestr.find("xyerrorlines")   == std::string::npos  &&  // 4,6,7 columns of data are required}\par
  364 {\cf20 //        stylestr.find("boxxyerrorbars") == std::string::npos  &&  // 4,6,7 columns of data are required}\par
  365 {\cf20 //        stylestr.find("financebars")    == std::string::npos  &&  // 5 columns of data are required}\par
  366 {\cf20 //        stylestr.find("candlesticks")   == std::string::npos  &&  // 5 columns of data are required}\par
  367 {\cf20 //        stylestr.find("vectors")        == std::string::npos  &&}\par
  368 {\cf20 //        stylestr.find("image")          == std::string::npos  &&}\par
  369 {\cf20 //        stylestr.find("rgbimage")       == std::string::npos  &&}\par
  370 {\cf20 //        stylestr.find("pm3d")           == std::string::npos  )}\par
  371     \{\par
  372         this->pstyle = std::string({\cf22 "points"});\par
  373     \}\par
  374     {\cf19 else}\par
  375     \{\par
  376         this->pstyle = stylestr;\par
  377     \}\par
  378 \par
  379     {\cf19 return} *{\cf17 this};\par
  380 \}\par
}
}
{\xe \v set_surface\:Gnuplot}
{\xe \v Gnuplot\:set_surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_surface ()}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   616 \{\par
  617     this->cmd({\cf22 "set surface"});\par
  618 \par
  619     {\cf19 return} *{\cf17 this};\par
  620 \}\par
}
}
{\xe \v set_terminal_std\:Gnuplot}
{\xe \v Gnuplot\:set_terminal_std}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gnuplot::set_terminal_std (const std::string &  {\i type}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11, Mac - aqua. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   139 \{\par
  140 {\cf21 #if defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
  141     {\cf19 if} (type.find({\cf22 "x11"}) != std::string::npos && getenv({\cf22 "DISPLAY"}) == NULL)\par
  142     \{\par
  143         {\cf19 throw} GnuplotException({\cf22 "Can't find DISPLAY variable"});\par
  144     \}\par
  145 {\cf21 #endif}\par
  146 \par
  147 \par
  148     Gnuplot::terminal_std = type;\par
  149     {\cf19 return};\par
  150 \}\par
}
}
{\xe \v set_title\:Gnuplot}
{\xe \v Gnuplot\:set_title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_title (const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   634 \{\par
  635     std::ostringstream cmdstr;\par
  636 \par
  637     cmdstr << {\cf22 "set title \\""} << title << {\cf22 "\\""};\par
  638     this->cmd(cmdstr.str());\par
  639 \par
  640     {\cf19 return} *{\cf17 this};\par
  641 \}\par
}
}
{\xe \v set_xautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_xautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xautoscale ()}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   706 \{\par
  707     this->cmd({\cf22 "set xrange restore"});\par
  708     this->cmd({\cf22 "set autoscale x"});\par
  709 \par
  710     {\cf19 return} *{\cf17 this};\par
  711 \}\par
}
}
{\xe \v set_xlabel\:Gnuplot}
{\xe \v Gnuplot\:set_xlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xlabel (const std::string &  {\i label} = {\f2 "x"})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   656 \{\par
  657     std::ostringstream cmdstr;\par
  658 \par
  659     cmdstr << {\cf22 "set xlabel \\""} << label << {\cf22 "\\""};\par
  660     this->cmd(cmdstr.str());\par
  661 \par
  662     {\cf19 return} *{\cf17 this};\par
  663 \}\par
}
}
{\xe \v set_xlogscale\:Gnuplot}
{\xe \v Gnuplot\:set_xlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xlogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   477 \{\par
  478     std::ostringstream cmdstr;\par
  479 \par
  480     cmdstr << {\cf22 "set logscale x "} << base;\par
  481     this->cmd(cmdstr.str());\par
  482 \par
  483     {\cf19 return} *{\cf17 this};\par
  484 \}\par
}
}
{\xe \v set_xrange\:Gnuplot}
{\xe \v Gnuplot\:set_xrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   694 \{\par
  695     std::ostringstream cmdstr;\par
  696 \par
  697     cmdstr << {\cf22 "set xrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
  698     this->cmd(cmdstr.str());\par
  699 \par
  700     {\cf19 return} *{\cf17 this};\par
  701 \}\par
}
}
{\xe \v set_yautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_yautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_yautoscale ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   728 \{\par
  729     this->cmd({\cf22 "set yrange restore"});\par
  730     this->cmd({\cf22 "set autoscale y"});\par
  731 \par
  732     {\cf19 return} *{\cf17 this};\par
  733 \}\par
}
}
{\xe \v set_ylabel\:Gnuplot}
{\xe \v Gnuplot\:set_ylabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_ylabel (const std::string &  {\i label} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   668 \{\par
  669     std::ostringstream cmdstr;\par
  670 \par
  671     cmdstr << {\cf22 "set ylabel \\""} << label << {\cf22 "\\""};\par
  672     this->cmd(cmdstr.str());\par
  673 \par
  674     {\cf19 return} *{\cf17 this};\par
  675 \}\par
}
}
{\xe \v set_ylogscale\:Gnuplot}
{\xe \v Gnuplot\:set_ylogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_ylogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   489 \{\par
  490     std::ostringstream cmdstr;\par
  491 \par
  492     cmdstr << {\cf22 "set logscale y "} << base;\par
  493     this->cmd(cmdstr.str());\par
  494 \par
  495     {\cf19 return} *{\cf17 this};\par
  496 \}\par
}
}
{\xe \v set_yrange\:Gnuplot}
{\xe \v Gnuplot\:set_yrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_yrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   716 \{\par
  717     std::ostringstream cmdstr;\par
  718 \par
  719     cmdstr << {\cf22 "set yrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
  720     this->cmd(cmdstr.str());\par
  721 \par
  722     {\cf19 return} *{\cf17 this};\par
  723 \}\par
}
}
{\xe \v set_zautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_zautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zautoscale ()}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   751 \{\par
  752     this->cmd({\cf22 "set zrange restore"});\par
  753     this->cmd({\cf22 "set autoscale z"});\par
  754 \par
  755     {\cf19 return} *{\cf17 this};\par
  756 \}\par
}
}
{\xe \v set_zlabel\:Gnuplot}
{\xe \v Gnuplot\:set_zlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zlabel (const std::string &  {\i label} = {\f2 "z"})}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   680 \{\par
  681     std::ostringstream cmdstr;\par
  682 \par
  683     cmdstr << {\cf22 "set zlabel \\""} << label << {\cf22 "\\""};\par
  684     this->cmd(cmdstr.str());\par
  685 \par
  686     {\cf19 return} *{\cf17 this};\par
  687 \}\par
}
}
{\xe \v set_zlogscale\:Gnuplot}
{\xe \v Gnuplot\:set_zlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zlogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   501 \{\par
  502     std::ostringstream cmdstr;\par
  503 \par
  504     cmdstr << {\cf22 "set logscale z "} << base;\par
  505     this->cmd(cmdstr.str());\par
  506 \par
  507     {\cf19 return} *{\cf17 this};\par
  508 \}\par
}
}
{\xe \v set_zrange\:Gnuplot}
{\xe \v Gnuplot\:set_zrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   739 \{\par
  740     std::ostringstream cmdstr;\par
  741 \par
  742     cmdstr << {\cf22 "set zrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
  743     this->cmd(cmdstr.str());\par
  744 \par
  745     {\cf19 return} *{\cf17 this};\par
  746 \}\par
}
}
{\xe \v showonscreen\:Gnuplot}
{\xe \v Gnuplot\:showonscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::showonscreen ()}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   415 \{\par
  416     this->cmd({\cf22 "set output"});\par
  417     this->cmd({\cf22 "set terminal "} + Gnuplot::terminal_std);\par
  418 \par
  419     {\cf19 return} *{\cf17 this};\par
  420 \}\par
}
}
{\xe \v ShowOnScreen\:Gnuplot}
{\xe \v Gnuplot\:ShowOnScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ShowOnScreen (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{ {\cf19 return} showonscreen();  \};\par
}
}
{\xe \v Smooth\:Gnuplot}
{\xe \v Gnuplot\:Smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Smooth (const std::string &  {\i stylestr} = {\f2 "csplines"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   233                         \{ {\cf19 return} set_smooth(stylestr); \}\par
}
}
{\xe \v Smooth\:Gnuplot}
{\xe \v Gnuplot\:Smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Smooth (int  {\i _fsmooth}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   236                                                 \{ {\cf19 if}( fsmooth = _fsmooth )\par
  237                               {\cf19 return} set_contour(); \par
  238                           {\cf19 else} \par
  239                               {\cf19 return} unset_contour();\par
  240                                                 \}\par
}
}
{\xe \v Style\:Gnuplot}
{\xe \v Gnuplot\:Style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Style (const std::string &  {\i stylestr} = {\f2 "points"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   215                          \{ {\cf19 return} set_style(stylestr); \}\par
}
}
{\xe \v Surface\:Gnuplot}
{\xe \v Gnuplot\:Surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Surface (int  {\i _fsurface} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   316                         \{ {\cf19 if}(fsurface = _fsurface) \par
  317                               {\cf19 return} set_surface(); \par
  318                           {\cf19 else} \par
  319                               {\cf19 return} unset_surface();\par
  320                         \}\par
}
}
{\xe \v Terminal\:Gnuplot}
{\xe \v Gnuplot\:Terminal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Gnuplot::Terminal (const std::string &  {\i type}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11 ou wxt (fedora9), Mac - aqua. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   144 \{ set_terminal_std(type); \}\par
}
}
{\xe \v Title\:Gnuplot}
{\xe \v Gnuplot\:Title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Title (const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   348                                                 \{ \par
  349                          {\cf19 return} set_title(title); \par
  350                         \}\par
}
}
{\xe \v Title\:Gnuplot}
{\xe \v Gnuplot\:Title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::Title (int  {\i _ftitle}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   352                                                 \{ \par
  353                          {\cf19 if}(ftitle = _ftitle)  \par
  354                            {\cf19 return} set_title();\par
  355                          {\cf19 else}\par
  356                            {\cf19 return} unset_title(); \par
  357                         \}\par
}
}
{\xe \v unset_contour\:Gnuplot}
{\xe \v Gnuplot\:unset_contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_contour ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa desenho do contorno em superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   607 \{\par
  608     this->cmd({\cf22 "unset contour"});\par
  609 \par
  610     {\cf19 return} *{\cf17 this};\par
  611 \}\par
}
}
{\xe \v unset_grid\:Gnuplot}
{\xe \v Gnuplot\:unset_grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_grid ()}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   468 \{\par
  469     this->cmd({\cf22 "unset grid"});\par
  470 \par
  471     {\cf19 return} *{\cf17 this};\par
  472 \}\par
}
}
{\xe \v unset_hidden3d\:Gnuplot}
{\xe \v Gnuplot\:unset_hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_hidden3d ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   580 \{\par
  581     this->cmd({\cf22 "unset hidden3d"});\par
  582 \par
  583     {\cf19 return} *{\cf17 this};\par
  584 \}\par
}
}
{\xe \v unset_legend\:Gnuplot}
{\xe \v Gnuplot\:unset_legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_legend ()}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   450 \{\par
  451     this->cmd({\cf22 "unset key"});\par
  452 \par
  453     {\cf19 return} *{\cf17 this};\par
  454 \}\par
}
}
{\xe \v unset_smooth\:Gnuplot}
{\xe \v Gnuplot\:unset_smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_smooth ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   406 \{\par
  407     this->smooth = {\cf22 ""};\par
  408 \par
  409     {\cf19 return} *{\cf17 this};\par
  410 \}\par
}
}
{\xe \v unset_surface\:Gnuplot}
{\xe \v Gnuplot\:unset_surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_surface ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   625 \{\par
  626     this->cmd({\cf22 "unset surface"});\par
  627 \par
  628     {\cf19 return} *{\cf17 this};\par
  629 \}\par
}
}
{\xe \v unset_title\:Gnuplot}
{\xe \v Gnuplot\:unset_title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_title ()}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   646 \{\par
  647     this->set_title({\cf22 ""});\par
  648 \par
  649     {\cf19 return} *{\cf17 this};\par
  650 \}\par
}
}
{\xe \v unset_xlogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_xlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_xlogscale ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   513 \{\par
  514     this->cmd({\cf22 "unset logscale x"});\par
  515     {\cf19 return} *{\cf17 this};\par
  516 \}\par
}
}
{\xe \v unset_ylogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_ylogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_ylogscale ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   521 \{\par
  522     this->cmd({\cf22 "unset logscale y"});\par
  523     {\cf19 return} *{\cf17 this};\par
  524 \}\par
}
}
{\xe \v unset_zlogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_zlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_zlogscale ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo z (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   529 \{\par
  530     this->cmd({\cf22 "unset logscale z"});\par
  531     {\cf19 return} *{\cf17 this};\par
  532 \}\par
}
}
{\xe \v XAutoscale\:Gnuplot}
{\xe \v Gnuplot\:XAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::XAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   405 \{ {\cf19 return} set_xautoscale (); \}\par
}
}
{\xe \v XLabel\:Gnuplot}
{\xe \v Gnuplot\:XLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::XLabel (const std::string &  {\i label} = {\f2 "x"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   371                         \{ {\cf19 return} set_xlabel(label); \}\par
}
}
{\xe \v XLogscale\:Gnuplot}
{\xe \v Gnuplot\:XLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::XLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   426                                                 \{ {\cf20 //if(base)}\par
  427                             {\cf19 return} set_xlogscale (base);\par
  428                             {\cf20 //else}\par
  429                                                     {\cf20 //return unset_xlogscale ();}\par
  430                                                 \}\par
}
}
{\xe \v XLogscale\:Gnuplot}
{\xe \v Gnuplot\:XLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::XLogscale (bool  {\i _fxlogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   434                             \{ {\cf19 if}(fxlogscale = _fxlogscale) \par
  435                                 {\cf19 return} set_xlogscale(); \par
  436                               {\cf19 else} \par
  437                                 {\cf19 return} unset_xlogscale();\par
  438                             \}\par
}
}
{\xe \v XRange\:Gnuplot}
{\xe \v Gnuplot\:XRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::XRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   385                         \{ {\cf19 return} set_xrange(iFrom,iTo); \}\par
}
}
{\xe \v YAutoscale\:Gnuplot}
{\xe \v Gnuplot\:YAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::YAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   411 \{ {\cf19 return} set_yautoscale (); \}\par
}
}
{\xe \v YLabel\:Gnuplot}
{\xe \v Gnuplot\:YLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::YLabel (const std::string &  {\i label} = {\f2 "y"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   364                         \{ {\cf19 return} set_ylabel(label); \}\par
}
}
{\xe \v YLogscale\:Gnuplot}
{\xe \v Gnuplot\:YLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::YLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   444 \{ {\cf19 return} set_ylogscale (base); \}\par
}
}
{\xe \v YLogscale\:Gnuplot}
{\xe \v Gnuplot\:YLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::YLogscale (bool  {\i _fylogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   451                         \{ {\cf19 if}(fylogscale = _fylogscale) \par
  452                               {\cf19 return} set_ylogscale(); \par
  453                           {\cf19 else} \par
  454                               {\cf19 return} unset_ylogscale();\par
  455                         \}\par
}
}
{\xe \v YRange\:Gnuplot}
{\xe \v Gnuplot\:YRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::YRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   392                         \{ {\cf19 return} set_yrange(iFrom,iTo); \}\par
}
}
{\xe \v ZAutoscale\:Gnuplot}
{\xe \v Gnuplot\:ZAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ZAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   417 \{ {\cf19 return} set_zautoscale (); \}\par
}
}
{\xe \v ZLabel\:Gnuplot}
{\xe \v Gnuplot\:ZLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ZLabel (const std::string &  {\i label} = {\f2 "z"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   378                         \{ {\cf19 return} set_zlabel(label); \}\par
}
}
{\xe \v ZLogscale\:Gnuplot}
{\xe \v Gnuplot\:ZLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ZLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   461 \{ {\cf19 return} set_zlogscale (base); \}\par
}
}
{\xe \v ZLogscale\:Gnuplot}
{\xe \v Gnuplot\:ZLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ZLogscale (bool  {\i _fzlogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   468                         \{ {\cf19 if}(fzlogscale = _fzlogscale) \par
  469                               {\cf19 return} set_zlogscale(); \par
  470                           {\cf19 else} \par
  471                               {\cf19 return} unset_zlogscale();\par
  472                         \}\par
}
}
{\xe \v ZRange\:Gnuplot}
{\xe \v Gnuplot\:ZRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot}& Gnuplot::ZRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   399                         \{ {\cf19 return} set_zrange(iFrom,iTo); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CGnuplot.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CGnuplot.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe GnuplotException\par \pard\plain 
{\tc\tcl2 \v GnuplotException}
{\xe \v GnuplotException}
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. }}\par
{
{\f2 #include <CGnuplot.h>}}\par
Diagrama de hierarquia para GnuplotException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_gnuplot_exception.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GnuplotException} (const std::string &msg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GnuplotException\:GnuplotException}
{\xe \v GnuplotException\:GnuplotException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GnuplotException::GnuplotException (const std::string &  {\i msg}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    58 :std::runtime_error (msg) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/{\b CGnuplot.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CFluido.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.h}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CFluido.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CFluido}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CFLUIDO_H}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v CFLUIDO_H\:CFluido.h}
{\xe \v CFluido.h\:CFLUIDO_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CFLUIDO_H}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.cpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <list>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include "CGnuplot.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Container > void {\b stringtok} (Container &container, std::string const &in, const char *const delimiters=" \\t\\n")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v stringtok\:CGnuplot.cpp}
{\xe \v CGnuplot.cpp\:stringtok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Container > void stringtok (Container &  {\i container}, std::string const &  {\i in}, const char *const  {\i delimiters} = {\f2 "\~ \\t\\n"})}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   160 \{\par
  161     {\cf17 const} std::string::size_type len = in.length();\par
  162           std::string::size_type i = 0;\par
  163 \par
  164     {\cf19 while} ( i < len )\par
  165     \{\par
  166         {\cf20 // eat leading whitespace}\par
  167         i = in.find_first_not_of (delimiters, i);\par
  168 \par
  169         {\cf19 if} (i == std::string::npos)\par
  170             {\cf19 return};   {\cf20 // nothing left but white space}\par
  171 \par
  172         {\cf20 // find the end of the token}\par
  173         std::string::size_type j = in.find_first_of (delimiters, i);\par
  174 \par
  175         {\cf20 // push token}\par
  176         {\cf19 if} (j == std::string::npos)\par
  177         \{\par
  178             container.push_back (in.substr(i));\par
  179             {\cf19 return};\par
  180         \}\par
  181         {\cf19 else}\par
  182             container.push_back (in.substr(i, j-i));\par
  183 \par
  184         {\cf20 // set up for next loop}\par
  185         i = j + 1;\par
  186     \}\par
  187 \par
  188     {\cf19 return};\par
  189 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.h}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CGnuplot.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <cstdio>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GnuplotException}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Gnuplot}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Gnuplot} {\b CGnuplot}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v CGnuplot\:CGnuplot.h}
{\xe \v CGnuplot.h\:CGnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Gnuplot} {\b CGnuplot}}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPermeabilidadeabs.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.h}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CPermeabilidadeabs.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include "CRocha.h"}\par
{\f2 #include "CFluido.h"}\par
{\f2 #include <armadillo>}\par
{\f2 #include "CGnuplot.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPermeabilidadeabs}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CPermeabilidadeabs_h}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v CPermeabilidadeabs_h\:CPermeabilidadeabs.h}
{\xe \v CPermeabilidadeabs.h\:CPermeabilidadeabs_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CPermeabilidadeabs_h}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CRecuperacao.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.h}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRecuperacao.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <iostream>}\par
{\f2 #include "CRocha.h"}\par
{\f2 #include <fstream>}\par
{\f2 #include <vector>}\par
{\f2 #include "CGnuplot.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CRecuperacao}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CRecuperacao_h}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v CRecuperacao_h\:CRecuperacao.h}
{\xe \v CRecuperacao.h\:CRecuperacao_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CRecuperacao_h}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CRocha.h"}\par
{\f2 #include <cmath>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.h}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/CRocha.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CRocha}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representa as propriedades da rocha arenitica, Berea. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CROCHA_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ 3.141592654\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v CROCHA_H\:CRocha.h}
{\xe \v CRocha.h\:CROCHA_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CROCHA_H}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PI\:CRocha.h}
{\xe \v CRocha.h\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ 3.141592654}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/ProjetoBuenoLaisa.cpp\par \pard\plain 
{\tc\tcl2 \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/ProjetoBuenoLaisa.cpp}
{\xe \v C:/Users/AntonioJ/Desktop/ProjetoFinalBueno/ProjetoBuenoLaisa/Documento - Projeto Engenharia/listagens/ProjetoBuenoLaisa.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include "CFluido.h"}\par
{\f2 #include "CRocha.h"}\par
{\f2 #include "CPermeabilidadeabs.h"}\par
{\f2 #include "CGnuplot.h"}\par
{\f2 #include "CRecuperacao.h"}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:ProjetoBuenoLaisa.cpp}
{\xe \v ProjetoBuenoLaisa.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    14 \{   \par
   15     std::cout << {\cf22 "###########################################################\\n"};\par
   16     std::cout << {\cf22 "###########################################################\\n"};\par
   17     std::cout << {\cf22 "LENEP/UENF - Programacao Pratica\\n"};\par
   18     std::cout << {\cf22 "Calculo dos Fatores de Recuperacao de Oleo para Metodos EOR\\n"};\par
   19     std::cout << {\cf22 "Teste de Fluxo em Meio Poroso - Recuperacao Avancada\\n"};\par
   20     std::cout << {\cf22 "Nome: Laisa Rigueti Brasil \\n"};\par
   21     std::cout << {\cf22 "###########################################################\\n"};\par
   22     std::cout << {\cf22 "###########################################################\\n"};\par
   23     std::cout << {\cf22 "\\n"};\par
   24     {\cf18 double} d1; {\cf18 double} d2; {\cf18 double} d3;\par
   25     std::cout << {\cf22 "Entre com os dados da Rocha:\\n"};\par
   26     std::cout << {\cf22 "Entre com tres medidas de diametro em mm:\\n"};\par
   27     std::cout << {\cf22 "Diametro (1/3): "}; cin >> d1; cin.get(); std::cout << {\cf22 "\\n"};\par
   28     std::cout << {\cf22 "Diametro (2/3): "}; cin >> d2; cin.get(); std::cout << {\cf22 "\\n"};\par
   29     std::cout << {\cf22 "Diametro (3/3): "}; cin >> d3; cin.get(); std::cout << {\cf22 "\\n"};\par
   30     {\cf18 double} d_medio = (d1 + d2 + d3) / 3;\par
   31     {\cf18 double} c1; {\cf18 double} c2; {\cf18 double} c3;\par
   32     std::cout << {\cf22 "Entre com tres medidas de comprimento em mm:\\n"};\par
   33     std::cout << {\cf22 "Comprimento (1/3): "}; cin >> c1; cin.get(); std::cout << {\cf22 "\\n"};\par
   34     std::cout << {\cf22 "Comprimento (2/3): "}; cin >> c2; cin.get(); std::cout << {\cf22 "\\n"};\par
   35     std::cout << {\cf22 "Comprimento (3/3): "}; cin >> c3; cin.get(); std::cout << {\cf22 "\\n"};\par
   36     {\cf18 double} c_medio = (c1 + c2 + c3) / 3;\par
   37     {\cf18 double} p_mo;\par
   38     std::cout << {\cf22 "\\n"};\par
   39     std::cout << {\cf22 "Entre com o peso da amostra saturada com o fluido em g:\\n"};\par
   40     std::cout << {\cf22 "Peso molhada: "}; cin >> p_mo; cin.get(); std::cout << {\cf22 "\\n"};\par
   41     {\cf18 double} p_se;\par
   42     std::cout << {\cf22 "Entre com o peso da amostra seca em g:\\n"};\par
   43     std::cout << {\cf22 "Peso seca: "}; cin >> p_se; cin.get(); std::cout << {\cf22 "\\n"};\par
   44     std::cout << {\cf22 "\\n"};\par
   45     std::cout << {\cf22 "##########################################################\\n"};\par
   46     std::cout << {\cf22 "Resumo dos dados de entrada da amostra (plug):\\n"};\par
   47     std::cout << {\cf22 "Diametro medio: "} << d_medio << {\cf22 " mm"} << {\cf23 '\\n'};\par
   48     std::cout << {\cf22 "Comprimento medio: "} << c_medio << {\cf22 " mm"} << {\cf23 '\\n'};\par
   49     std::cout << {\cf22 "Peso molhada: "} << p_mo << {\cf22 " g"} << {\cf23 '\\n'};\par
   50     std::cout << {\cf22 "Peso seca "} << p_se << {\cf22 " g"} << {\cf23 '\\n'};\par
   51     CRocha berea6({\cf22 "Arenito"}, d_medio, c_medio, p_se, p_mo);     {\cf20 //Construtor Sobrecarregado}\par
   52     std::cout << {\cf22 "Area: "} << berea6.Area() << {\cf22 " mm^2"} << {\cf23 '\\n'};\par
   53     std::cout << {\cf22 "Volume Total: "} << berea6.VolumeTotal() << {\cf22 " mm^3"} << {\cf23 '\\n'};\par
   54     std::cout << {\cf22 "Volume Poroso: "} << berea6.VolumePoroso() << {\cf22 " mL"} << {\cf23 '\\n'};\par
   55     std::cout << {\cf22 "Porosidade: "} << berea6.Porosidade() << {\cf23 '\\n'};\par
   56     std::cout << {\cf22 "##########################################################\\n"};\par
   57     std::cout << {\cf22 "\\n"};\par
   58 \par
   59     std::cout << {\cf22 "Calcularemos agora da Permeabilidade absoluta do meio poroso:\\n"};\par
   60     {\cf18 double} visc; {\cf18 double} q_inj;\par
   61     std::cout << {\cf22 "Entre com os dados do Fluido.\\n"};\par
   62     std::cout << {\cf22 "Entre com a vazao de injecao em mL/min\\n"};\par
   63     std::cout << {\cf22 "Vazao de injecao: "}; cin >> q_inj; cin.get(); std::cout << {\cf23 '\\n'};\par
   64     std::cout << {\cf22 "Entre com a viscosidade do fluido em cP\\n"};\par
   65     std::cout << {\cf22 "Viscosidade: "}; cin >> visc; cin.get(); std::cout << {\cf23 '\\n'};\par
   66 \par
   67     std::cout << {\cf22 "##########################################################\\n"};\par
   68     std::cout << {\cf22 "Resumo do dados de entrada do fluido\\n"};\par
   69     std::cout << {\cf22 "Vazao de injecao: "} << q_inj << {\cf23 '\\n'};\par
   70     std::cout << {\cf22 "Viscosidade: "} << visc << {\cf23 '\\n'};\par
   71     std::cout << {\cf22 "##########################################################\\n"};\par
   72     CFluido brine({\cf22 "Brine"}, visc, q_inj);\par
   73 \par
   74     std::cout << {\cf22 "Entre com as vazoes utilizadas no experimento de Perm.Absoluta para criacao do grafico\\n"};\par
   75     {\cf18 double} q1; {\cf18 double} q2; {\cf18 double} q3;\par
   76     std::cout << {\cf22 "Entre com tres medidas de vazao em mL/min\\n"};\par
   77     std::cout << {\cf22 "Vazao (1/3): "}; cin >> q1; cin.get(); std::cout << {\cf23 '\\n'};\par
   78     std::cout << {\cf22 "Vazao (2/3): "}; cin >> q2; cin.get(); std::cout << {\cf23 '\\n'};\par
   79     std::cout << {\cf22 "Vazao (3/3): "}; cin >> q3; cin.get(); std::cout << {\cf23 '\\n'};\par
   80     std::cout << {\cf22 "\\n"};\par
   81     std::cout << {\cf22 "Entre com as pressoes utilizadas no experimento de Perm.Absoluta para criacao do grafico\\n"};\par
   82     {\cf18 double} p1; {\cf18 double} p2; {\cf18 double} p3;\par
   83     std::cout << {\cf22 "Entre com tres medidas de pressao em psia\\n"};\par
   84     std::cout << {\cf22 "Pressao (1/3): "}; cin >> p1; cin.get(); std::cout << {\cf23 '\\n'};\par
   85     std::cout << {\cf22 "Pressao (2/3): "}; cin >> p2; cin.get(); std::cout << {\cf23 '\\n'};\par
   86     std::cout << {\cf22 "Pressao (3/3): "}; cin >> p3; cin.get(); std::cout << {\cf23 '\\n'};\par
   87     std::vector<double> vaz = \{ q1,q2,q3 \};\par
   88     std::vector<double> pre = \{ p1,p2,p3 \};\par
   89     std::cout << {\cf22 "##########################################################\\n"};\par
   90     CPermeabilidadeabs exp1(vaz, pre, berea6, brine);\par
   91     exp1.RegressaoLinear();\par
   92     std::cout << {\cf22 "##########################################################\\n"};\par
   93     std::cout << {\cf22 "\\n"};\par
   94 \par
   95     std::cout << {\cf22 "Calcularemos agora os Fatores de Recuperacao de Oleo:\\n"};\par
   96     CRecuperacao r1 (berea6);\par
   97     std::string arq;\par
   98     std::cout << {\cf22 "Entre com o nome do arquivo contendo os dados do experimento de Recuperacao (.txt): "}; cin >> arq; cin.get(); std::cout << {\cf23 '\\n'};\par
   99     r1.Read(arq);\par
  100     {\cf19 while} ({\cf17 true}) \{\par
  101         {\cf18 int} resp;\par
  102         std::cout << {\cf22 "Escolha o grafico de volume produzido a ser gerado: \\n"};\par
  103         std::cout << {\cf22 "1 - Volume de Agua Produzida Acumulada\\n"};\par
  104         std::cout << {\cf22 "2 - Volume de Oleo Recuperado com metodo secundario\\n"};\par
  105         std::cout << {\cf22 "3 - Volume Adicional de Oleo Recuperado com metodo EOR\\n"};\par
  106         std::cout << {\cf22 "4 - Sair da selecao do grafico\\n"};\par
  107         cin >> resp; cin.get();\par
  108         {\cf19 if} (resp == 1) \{\par
  109             r1.VwProduzida();\par
  110         \}\par
  111         {\cf19 else} {\cf19 if} (resp == 2) \{\par
  112             r1.VoProduzido1();\par
  113         \}\par
  114         {\cf19 else} {\cf19 if} (resp == 3) \{\par
  115             r1.VoProduzido2();\par
  116         \}\par
  117         {\cf19 else} {\cf19 if} (resp == 4) {\cf19 break};\par
  118         {\cf19 else} std::cout << {\cf22 "Entrada invalida\\n"};\par
  119     \}\par
  120     {\cf18 double} aux;\par
  121     std::cout << {\cf22 "Entre com os dados da Recuperacao:\\n"};\par
  122     std::cout << {\cf22 "Volume de Agua Inicial (Recuperacao Secundaria): "}; cin >> aux; cin.get(); r1.sVwi(aux); std::cout << {\cf23 '\\n'};\par
  123     std::cout << {\cf22 "Volume de Agua Produzida (Recuperacao Secundaria): "}; cin >> aux; cin.get(); r1.sVwf(aux); std::cout << {\cf23 '\\n'};\par
  124     std::cout << {\cf22 "Volume de Oleo Produzido (Recuperacao Secundaria): "}; cin >> aux; cin.get(); r1.sVof(aux); std::cout << {\cf23 '\\n'};\par
  125     std::cout << {\cf22 "Volume de Oleo Produzido (Recuperacao Avancada): "}; cin >> aux; cin.get(); r1.sVor(aux); std::cout << {\cf23 '\\n'};\par
  126     \par
  127     std::cout << {\cf22 "Dados da Recuperacao\\n"};\par
  128     std::cout << {\cf22 "Volume de Oleo Inicial: "} << r1.VolumeOleoInicial() << {\cf22 " mL"} << {\cf23 '\\n'};\par
  129     std::cout << {\cf22 "Saturacao de Oleo Inicial: "} << r1.SaturacaoOleoInicial() << {\cf22 " %"} << {\cf23 '\\n'};\par
  130     std::cout << {\cf22 "Saturacao de Agua Irredutivel: "} << r1.SaturacaoAguaIrredutivel() << {\cf22 " %"} << {\cf23 '\\n'};\par
  131     std::cout << {\cf22 "Fator Recuperacao Secundaria: "} << r1.FatorRecuperacaoSecundadria() << {\cf22 " %"} << {\cf23 '\\n'};\par
  132 \par
  133     std::cout << {\cf22 "Saturacao de Oleo Residual: "} << r1.SaturacaoOleoResidual() << {\cf22 " %"} << {\cf23 '\\n'};\par
  134     std::cout << {\cf22 "Volume de Oleo Residual: "} << r1.VolumeOleoResidual() << {\cf22 " mL"} << {\cf23 '\\n'};\par
  135     std::cout << {\cf22 "Fator Recuperacao Avancada: "} << r1.FatorRecuperacaoAvancada() << {\cf22 " %"} << {\cf23 '\\n'};\par
  136 \par
  137     std::cout << {\cf22 "Fator Recuperacao Total: "} << r1.FatorRecuperacaoTotal() << {\cf22 " %"} << {\cf23 '\\n'};\par
  138 \par
  139     std::ofstream out; {\cf20 // }\par
  140     std::ofstream fout({\cf22 "Resultados.txt"});\par
  141     fout << {\cf22 "Resultados do Software:\\n"};\par
  142     fout << {\cf22 "\\n"};\par
  143     fout << {\cf22 "#############################################################################\\n"};\par
  144     fout << {\cf22 "Resumo dos dados de entrada da amostra (plug):\\n"};\par
  145     fout << {\cf22 "Diametro medio: "} << d_medio << {\cf22 " mm"} << {\cf23 '\\n'};\par
  146     fout << {\cf22 "Comprimento medio: "} << c_medio << {\cf22 " mm"} << {\cf23 '\\n'};\par
  147     fout << {\cf22 "Peso molhada: "} << p_mo << {\cf22 " g"} << {\cf23 '\\n'};\par
  148     fout << {\cf22 "Peso seca "} << p_se << {\cf22 " g"} << {\cf23 '\\n'};\par
  149     fout << {\cf22 "#############################################################################\\n"};\par
  150     fout << {\cf22 "Resumo das propriedades do meio poroso (plug):\\n"};\par
  151     fout << {\cf22 "Area: "} << berea6.Area() << {\cf22 " mm^2"} << {\cf23 '\\n'};\par
  152     fout << {\cf22 "Volume Total: "} << berea6.VolumeTotal() << {\cf22 " mm^3"} << {\cf23 '\\n'};\par
  153     fout << {\cf22 "Volume Poroso: "} << berea6.VolumePoroso() << {\cf22 " mL"} << {\cf23 '\\n'};\par
  154     fout << {\cf22 "Porosidade: "} << berea6.Porosidade() << {\cf23 '\\n'};\par
  155     fout << {\cf22 "#############################################################################\\n"};\par
  156     fout << {\cf22 "Resultado dos Fatores de Recuperacao \'E0 partir de Testes de Fluxo em Meio Poroso:\\n"};\par
  157     fout << {\cf22 "Volume de Oleo Inicial: "} << r1.VolumeOleoInicial() << {\cf22 " mL"} << {\cf23 '\\n'};\par
  158     fout << {\cf22 "Saturacao de Oleo Inicial: "} << r1.SaturacaoOleoInicial() << {\cf22 " %"} << {\cf23 '\\n'};\par
  159     fout << {\cf22 "Saturacao de Agua Irredutivel: "} << r1.SaturacaoAguaIrredutivel() << {\cf22 " %"} << {\cf23 '\\n'};\par
  160     fout << {\cf22 "Fator Recuperacao Secundaria: "} << r1.FatorRecuperacaoSecundadria() << {\cf22 " %"} << {\cf23 '\\n'};\par
  161     fout << {\cf22 "Saturacao de Oleo Residual: "} << r1.SaturacaoOleoResidual() << {\cf22 " %"} << {\cf23 '\\n'};\par
  162     fout << {\cf22 "Volume de Oleo Residual: "} << r1.VolumeOleoResidual() << {\cf22 " mL"} << {\cf23 '\\n'};\par
  163     fout << {\cf22 "Fator Recuperacao Avancada: "} << r1.FatorRecuperacaoAvancada() << {\cf22 " %"} << {\cf23 '\\n'};\par
  164     fout << {\cf22 "\\n"};\par
  165     fout << {\cf22 "Fator Recuperacao Total: "} << r1.FatorRecuperacaoTotal() << {\cf22 " %"} << {\cf23 '\\n'};\par
  166     out.close();\par
  167 \par
  168     std::cout << {\cf22 "Pressione uma tecla para continuar"}; std::cin.get(); std::cout << {\cf23 '\\n'};\par
  169 \par
  170 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}